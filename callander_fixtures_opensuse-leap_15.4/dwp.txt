callander: permitted syscalls: read(any u32, any, any) @ libpthread.so.0+0x156cc(read+14)
read(any u32, any, any) @ libpthread.so.0+0x15702(read+68)
read(any u32, any, any) @ libc.so.6+0x106a5c(read+14)
read(any u32, any, any) @ libc.so.6+0x106a92(read+68)
read(any u32, any, any) @ libc.so.6+0x10bec2(__read_nocancel+4)
write(any u32, any, any) @ libpthread.so.0+0x15621(write+19)
write(any u32, any, any) @ libpthread.so.0+0x15655(write+71)
write(any u32, any, any) @ libc.so.6+0x106b11(write+19)
write(any u32, any, any) @ libc.so.6+0x106b45(write+71)
write(any u32, any, any) @ libc.so.6+0x10bf45(__write_nocancel+7)
close(any u32) @ libpthread.so.0+0x15781(__close+19)
close(any u32) @ libpthread.so.0+0x157a5(__close+55)
close(any u32) @ libc.so.6+0x107341(__close+19)
close(any u32) @ libc.so.6+0x107365(__close+55)
close(any u32) @ libc.so.6+0x10bc25(__close_nocancel+7)
close(any u32) @ libc.so.6+0x133127(__netlink_open+169)
close(any u32) @ libc.so.6+0x1331fc(getifaddrs_internal+174)
stat(any, any) @ libc.so.6+0x105e73(__xstat+21)
fstat(any u32, any) @ libc.so.6+0x105ed1(__fxstat+19)
lstat(any, any) @ libc.so.6+0x105f33(__lxstat64+21)
poll(any, 1, any u32) @ libc.so.6+0x10b1b1(poll+19)
poll(any, 1, any u32) @ libc.so.6+0x10b1e7(poll+73)
lseek(any u32, any, any u32) @ libpthread.so.0+0x15d35(lseek+7)
lseek(any u32, any, any) @ libc.so.6+0x106bb5(lseek64+7)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ ld-linux-x86-64.so.2+0x1da01(mmap64+67)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ ld-linux-x86-64.so.2+0x1da56(mmap64+152)
mmap(0, any, any u32, any u32, any u32, NULL-0xffffffffffffe000) @ libc.so.6+0x1110c1(mmap+67)
mmap(NULL-0xfffffffffffffffe, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x1110c1(mmap+67)
mmap(any, 0x4000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x1110c1(mmap+67)
mmap(0, any, any, any u32, any u32, NULL-0xffffffffffffe000) @ libc.so.6+0x111125(mmap+167)
mprotect(any, any, any u32) @ libc.so.6+0x111195(__mprotect+5)
munmap(any, any) @ libc.so.6+0x111165(munmap+5)
brk(any) @ libc.so.6+0x10cb07(brk+9)
rt_sigaction(SIGABRT, any, 0, 8) @ libc.so.6+0x4ae4b(__libc_sigaction+189)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libpthread.so.0+0xa7ff(start_thread+497)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ libc.so.6+0x4ac99(raise+203)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x4acd9(raise+267)
rt_sigprocmask(SIG_UNBLOCK-SIG_SETMASK, any, 0, 8) @ libc.so.6+0x4b004(sigprocmask+70)
rt_sigreturn(any) @ libc.so.6+0x4ad77
ioctl(any u32, TCGETS, any) @ libc.so.6+0x10c246(tcgetattr+40)
ioctl(any u32, FIONREAD, any) @ libc.so.6+0x10cc45(ioctl+5)
pread64(any u32, any, any, any) @ libpthread.so.0+0x15ff4(__pread64+22)
pread64(any u32, any, any, any) @ libpthread.so.0+0x1602d(__pread64+79)
pread64(any u32, any, 1, any) @ libc.so.6+0x104914(pread+22)
pread64(any u32, any, 1, any) @ libc.so.6+0x10494d(pread+79)
pwrite64(any u32, libc.so.6+0x1b538b, 1, any) @ libc.so.6+0x1049d4(pwrite64+22)
pwrite64(any u32, libc.so.6+0x1b538b, 1, any) @ libc.so.6+0x104a0d(pwrite64+79)
readv(any u32, any, any u8) @ libc.so.6+0x10cc91(readv+19)
readv(any u32, any, any u8) @ libc.so.6+0x10ccc5(readv+71)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0x11a06(_dl_debug_vdprintf+296)
writev(STDERR_FILENO, NULL-0xfffffffffffffff0, any) @ libc.so.6+0x90a0e(__libc_message+448)
writev(any u32, any, 2) @ libc.so.6+0x10cd41(writev+19)
writev(any u32, any, 2) @ libc.so.6+0x10cd75(writev+71)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x118698(mremap+8)
madvise(NULL-0xfffffffffffffffe, any, MADV_DONTNEED) @ libc.so.6+0x111275(__madvise+5)
madvise(any, 0x1-0xffffffffffffbfff, MADV_DONTNEED) @ libc.so.6+0x111275(__madvise+5)
dup(STDIN_FILENO-0xfffffffe) @ libc.so.6+0x1073b5(dup+5)
getpid() @ libc.so.6+0x4aca2(raise+212)
getpid() @ libc.so.6+0xe28a5(__getpid+5)
socket(AF_INET, any u32, 17) @ libc.so.6+0x119215(__socket+5)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 0) @ libc.so.6+0x119215(__socket+5)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x119104(sendto+22)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x119150(sendto+98)
recvfrom(any u32, any, any, MSG_DONTWAIT, any, any) @ libc.so.6+0x118e04(recvfrom+22)
recvfrom(any u32, any, any, MSG_DONTWAIT, any, any) @ libc.so.6+0x118e50(recvfrom+98)
recvmsg(any u32, any, 0) @ libc.so.6+0x118ed1(recvmsg+19)
recvmsg(any u32, any, MSG_ERRQUEUE) @ libc.so.6+0x118ed1(recvmsg+19)
recvmsg(any u32, any, 0) @ libc.so.6+0x118f05(recvmsg+71)
recvmsg(any u32, any, MSG_ERRQUEUE) @ libc.so.6+0x118f05(recvmsg+71)
bind(any u32, any, 12) @ libc.so.6+0x118b75(bind+5)
bind(any u32, any, 16) @ libc.so.6+0x118b75(bind+5)
getsockname(any u32, any, any) @ libc.so.6+0x118c85(getsockname+5)
setsockopt(any u32, SOL_IP, IP_RECVERR, any, 4) @ libc.so.6+0x1191b8(setsockopt+8)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, any, any, any, any) @ libc.so.6+0x117a7f(__clone+47)
exit(0) @ libpthread.so.0+0xa7a4(start_thread+406)
exit(0) @ libc.so.6+0x35304(__libc_start_main+310)
exit(any) @ libc.so.6+0x117a97(__clone+71)
fcntl(STDIN_FILENO-0xfffffffe, F_SETFL, any u16) @ libc.so.6+0x10bc7e(__fcntl64_nocancel_adjusted+32)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0x10bc7e(__fcntl64_nocancel_adjusted+32)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x10bc7e(__fcntl64_nocancel_adjusted+32)
ftruncate(any u32, any) @ libc.so.6+0x10f5a5(ftruncate64+7)
getcwd(non-NULL, any) @ libc.so.6+0x107660(getcwd+178)
unlink(any) @ libc.so.6+0x108815(unlink+5)
chmod(any, any u32) @ libc.so.6+0x106575(chmod+5)
umask(any u32) @ libc.so.6+0x106565(umask+5)
gettimeofday(any, any) @ [vdso]+0x7ff(gettimeofday+271)
sysinfo(any) @ libc.so.6+0x1187b5(sysinfo+5)
times(any) @ libc.so.6+0xe1645(times+7)
fstatfs(any u32, any) @ libc.so.6+0x106435(fstatfs64+5)
sched_getparam(0, any) @ libpthread.so.0+0xb321(pthread_create+2339)
sched_getparam(any u32, any) @ libc.so.6+0xfc4b5(sched_getparam+5)
sched_setscheduler(any u32, any u32, any) @ libpthread.so.0+0x94d9(create_thread+219)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xfc4e5(__sched_setscheduler+5)
sched_getscheduler(0) @ libpthread.so.0+0xb2f4(pthread_create+2294)
sched_getscheduler(any u32) @ libc.so.6+0xfc515(sched_getscheduler+5)
sched_get_priority_max(1) @ libc.so.6+0xfc575(sched_get_priority_max+5)
sched_get_priority_min(1) @ libc.so.6+0xfc5a5(__sched_get_priority_min+5)
gettid() @ libc.so.6+0x4acac(raise+222)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, 0, any u32, any)
futex(any, any u32, 0x2-0x3, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any)
futex(any, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME-FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
futex(libstdc++.so.6+0x2417a0, FUTEX_WAKE, INT_MAX, any, any, any)
futex(libstdc++.so.6+0x242e08, FUTEX_WAKE, INT_MAX, any, any, any)
futex(/usr/bin/dwp+0x27ad70, FUTEX_WAKE, INT_MAX, any, any, any)
sched_setaffinity(any u32, any, non-NULL) @ libpthread.so.0+0x94a7(create_thread+169)
getdents64(any u32, any, any) @ libc.so.6+0xdcb55(getdents64+23)
restart_syscall()
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xdbbda(clock_gettime+92)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xdbbda(clock_gettime+92)
clock_gettime(any u32, any) @ [vdso]+0x99a(__vdso_clock_gettime+202)
clock_getres(any u32, any) @ [vdso]+0xb9e(__vdso_clock_getres+94)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xdbc88(clock_nanosleep+42)
clock_nanosleep(any u32, any u32, any, any) @ libc.so.6+0xdbcdf(clock_nanosleep+129)
exit_group(any u8) @ ld-linux-x86-64.so.2+0x1db24(_exit+38)
exit_group(any u32) @ libc.so.6+0xe1c64(_Exit+54)
tgkill(any u32, any u32, SIGCANCEL) @ libpthread.so.0+0x9509(create_thread+267)
tgkill(any, any u32, SIGABRT) @ libc.so.6+0x4acb7(raise+233)
tgkill(any, any u32, SIGFPE) @ libc.so.6+0x4acb7(raise+233)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libpthread.so.0+0x15e6b(open+77)
openat(AT_FDCWD, any, O_RDWR|O_CREAT|O_TRUNC|O_CLOEXEC, 0100) @ libpthread.so.0+0x15e6b(open+77)
openat(AT_FDCWD, any, O_RDWR|O_CREAT|O_TRUNC|O_CLOEXEC, 0666) @ libpthread.so.0+0x15e6b(open+77)
openat(AT_FDCWD, any, any u32, any) @ libpthread.so.0+0x15ef1(open+211)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x10677b(open+77)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x106801(open+211)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x10bd9f(__open_nocancel+65)
openat(any u32, libc.so.6+0x1b6e26, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x10be44(__openat64_nocancel+54)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x1063b7(__fxstatat+25)
set_robust_list(any, 24) @ libpthread.so.0+0xa674(start_thread+102)
fallocate(any u32, 0, 0, any) @ libc.so.6+0x10b814(posix_fallocate64+22)
fallocate(any u32, 0, 0, any) @ libc.so.6+0x10bb84(fallocate64+22)
fallocate(any u32, 0, 0, any) @ libc.so.6+0x10bbbb(fallocate64+77)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x10c5ee(getrlimit+16)
