callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4a70c(__stdio_read*+77)
open(ld-musl-x86_64.so.1+0x94b63, 0x8002, any) @ ld-musl-x86_64.so.1+0x1c981(__init_libc*+357)
open(any, any, any) @ ld-musl-x86_64.so.1+0x4b706(fopen64+85)
open(any, any, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
open(any, any, any) @ ld-musl-x86_64.so.1+0x583bc
close(any) @ ld-musl-x86_64.so.1+0x4a624(__stdio_close*+17)
close(any) @ ld-musl-x86_64.so.1+0x4b74f(fopen64+158)
close(any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
close(any) @ ld-musl-x86_64.so.1+0x583bc
stat(any, any) @ ld-musl-x86_64.so.1+0x49dbb(fstatat64+207)
fstat(any, any) @ ld-musl-x86_64.so.1+0x49d23(fstatat64+55)
lstat(non-NULL, any) @ ld-musl-x86_64.so.1+0x49dbb(fstatat64+207)
poll(any, 3, 6) @ ld-musl-x86_64.so.1+0x1c95e(__init_libc*+322)
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x5b425(lseek64+11)
mmap(0, any, 0, 34, 0xffffffffffffffff, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, 3, 34, 0xffffffffffffffff, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(any, 0x1000, 0, 50, 0xffffffffffffffff, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mprotect(NULL-0xfffffffffffff000, any, 3) @ ld-musl-x86_64.so.1+0x39165(mprotect+37)
munmap(NULL-0xfffffffffffffffe, any) @ ld-musl-x86_64.so.1+0x3926b(munmap+25)
munmap(any, non-NULL) @ ld-musl-x86_64.so.1+0x3926b(munmap+25)
munmap(any, any) @ ld-musl-x86_64.so.1+0x58350
brk(0) @ ld-musl-x86_64.so.1+0x26e0a(__malloc_alloc_meta*+234)
brk(any) @ ld-musl-x86_64.so.1+0x26e2f(__malloc_alloc_meta*+271)
brk(any) @ ld-musl-x86_64.so.1+0x26e59(__malloc_alloc_meta*+313)
rt_sigaction(33, any, 0, 8) @ ld-musl-x86_64.so.1+0x494cb(__libc_sigaction*+282)
rt_sigprocmask(0, ld-musl-x86_64.so.1+0x937b8(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x491f6(__block_all_sigs*+23)
rt_sigprocmask(0, ld-musl-x86_64.so.1+0x937b0(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x49210(__block_app_sigs*+23)
rt_sigprocmask(2, any, 0, 8) @ ld-musl-x86_64.so.1+0x49228(__restore_sigs*+21)
rt_sigprocmask(1, any, 0, 8) @ ld-musl-x86_64.so.1+0x4944c(__libc_sigaction*+155)
rt_sigprocmask(0, any, any, 8) @ ld-musl-x86_64.so.1+0x578ce(pthread_sigmask+29)
rt_sigprocmask(2, any, 0, 8) @ ld-musl-x86_64.so.1+0x578ce(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x49ad1(__restore_rt*+7)
ioctl(any, 0x1-0x2, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 769, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0x1260, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0x4c03, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0x4c05, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0x40047211, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0x40086602, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffff80081272, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffff80086601, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffff80200204, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffff8400941f, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffffc020660b, NULL-0xfffffffffffffff0) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffffd0009411, any) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffffd000941e, /sbin/extlinux+0x38500) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0xffffffffd000941e, /sbin/extlinux+0x39500) @ ld-musl-x86_64.so.1+0x37874(ioctl+48)
ioctl(any, 0x5413, any) @ ld-musl-x86_64.so.1+0x4a344(fdopen+270)
ioctl(any, 0x5413, any) @ ld-musl-x86_64.so.1+0x4a883(__stdout_write*+48)
pread64(any, any, non-NULL, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
pread64(any, any, non-NULL, any) @ ld-musl-x86_64.so.1+0x583bc
pwrite64(any, any, non-NULL, any) @ ld-musl-x86_64.so.1+0x55594(__syscall_cp_c*+57)
pwrite64(any, any, non-NULL, any) @ ld-musl-x86_64.so.1+0x583bc
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4a70c(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4a7d4(__stdio_write*+81)
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, 1, any) @ ld-musl-x86_64.so.1+0x391ed(mremap+124)
madvise(NULL-0xfffffffffffffffe, any, 8) @ ld-musl-x86_64.so.1+0x39038(madvise+9)
exit(0) @ ld-musl-x86_64.so.1+0x56014(pthread_exit+483)
exit(0) @ ld-musl-x86_64.so.1+0x5835a
fcntl(any, 2, 1) @ ld-musl-x86_64.so.1+0x1d33a(open+126)
fcntl(any, 1, 0xfffffff7) @ ld-musl-x86_64.so.1+0x49b88(fchmod+44)
fcntl(any, 1, any) @ ld-musl-x86_64.so.1+0x49d3b(fstatat64+79)
fcntl(any, 2, 1) @ ld-musl-x86_64.so.1+0x4a2d5(fdopen+159)
fcntl(any, 2, 1) @ ld-musl-x86_64.so.1+0x4b735(fopen64+132)
getcwd(any, 0x1000-0x1001) @ ld-musl-x86_64.so.1+0x5b223(getcwd+71)
unlink(any) @ ld-musl-x86_64.so.1+0x5ba2d(unlink+6)
readlink(any, any, non-NULL) @ ld-musl-x86_64.so.1+0x5b657(readlink+27)
chmod(any, NULL-0x124) @ ld-musl-x86_64.so.1+0x49ba9(fchmod+77)
fchmod(any, NULL-0x124) @ ld-musl-x86_64.so.1+0x49b6f(fchmod+19)
gettimeofday(any, 0) @ ld-musl-x86_64.so.1+0x59638(clock_gettime+80)
gettimeofday(any, any) @ [vdso]+0x7da(gettimeofday+218)
statfs(non-NULL, any) @ ld-musl-x86_64.so.1+0x49fc4(statfs64+24)
sync() @ ld-musl-x86_64.so.1+0x5b8a8(sync+5)
tkill(any, 33) @ ld-musl-x86_64.so.1+0x5552b(cancel_handler*+103)
tkill(any, 33) @ ld-musl-x86_64.so.1+0x56b68(pthread_kill+65)
futex(any, NULL-0x87, any, any, any, any)
futex(any, any u32, 1, any, 202, any)
futex(any, any, any, any, 0, any)
futex(ld-musl-x86_64.so.1+0x97460(maplock*), any u32, any, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98ba0(key_lock*), any u32, any, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99900(lock*), any u32, any, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), any, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99fb0(__thread_list_lock*), any, any, 0, ld-musl-x86_64.so.1+0x9a038(tl_lock_waiters*), 0x1-0xffffffff)
restart_syscall()
clock_gettime(any, any) @ ld-musl-x86_64.so.1+0x59619(clock_gettime+49)
clock_gettime(any u32, any) @ [vdso]+0x9af(__vdso_clock_gettime+207)
clock_getres(any u32, any) @ [vdso]+0xbaa(__vdso_clock_getres+90)
exit_group(any) @ ld-musl-x86_64.so.1+0x1cea9(_Exit+8)
newfstatat(any, ld-musl-x86_64.so.1+0x94d68, any, 0x1000) @ ld-musl-x86_64.so.1+0x49d54(fstatat64+104)
newfstatat(any, ld-musl-x86_64.so.1+0x94d68, any, 0x1000) @ ld-musl-x86_64.so.1+0x49dcd(fstatat64+225)
set_robust_list(0, 24) @ ld-musl-x86_64.so.1+0x55fbe(pthread_exit+397)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x56ede(__pthread_mutex_trylock_owner*+182)
