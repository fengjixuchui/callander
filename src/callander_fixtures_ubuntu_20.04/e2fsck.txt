callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x10dfd0(read+16)
read(any u32, any, any) @ libc.so.6+0x10e00a(read+74)
read(any u32, any, any) @ libc.so.6+0x113606(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x10e075(write+21)
write(any u32, any, any) @ libc.so.6+0x10e0ad(write+77)
write(any u32, any, any) @ libc.so.6+0x113679(__write_nocancel+9)
close(any u32) @ libc.so.6+0x10e815(__close+21)
close(any u32) @ libc.so.6+0x10e839(__close+57)
close(any u32) @ libc.so.6+0x113349(__close_nocancel+9)
close(any u32) @ libc.so.6+0x13a667(__netlink_open*+183)
close(any u32) @ libc.so.6+0x13a84c(getifaddrs_internal*+460)
stat(any, any) @ libc.so.6+0x10d4b8(__xstat+24)
fstat(any u32, any) @ libc.so.6+0x10d517(__fxstat+23)
lstat(non-NULL, any) @ libc.so.6+0x10d578(__lxstat64+24)
poll(any, 1, any u32) @ libc.so.6+0x112965(poll+21)
poll(any, 1, any u32) @ libc.so.6+0x11299d(poll+77)
lseek(any u32, any, any) @ libc.so.6+0x10e109(lseek64+9)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ ld-linux-x86-64.so.2+0x1f184(mmap64*+36)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ ld-linux-x86-64.so.2+0x1f1ce(mmap64*+110)
mmap(0, any u32, PROT_READ|PROT_WRITE, MAP_SHARED, any u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE, any u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, 0x8000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(NULL-0xfffffffffffffffe, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(any, 0x4000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any u32, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_32BIT, any u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE|MAP_32BIT, any u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_STACK, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_STACK, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, 0x4000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, 0x8000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x1189a9(__mprotect+9)
munmap(any, any) @ libc.so.6+0x118979(munmap+9)
brk(NULL-0xfffffffffffffffe) @ libc.so.6+0x114289(brk+9)
rt_sigaction(any u32, 0, any, 8) @ libc.so.6+0x43164(__libc_sigaction*+196)
rt_sigaction(any u32, any, 0, 8) @ libc.so.6+0x43164(__libc_sigaction*+196)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ libc.so.6+0x42fc8(raise+136)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x43009(raise+201)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, any, 8) @ libc.so.6+0x43309(sigprocmask+73)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1b23e0(sigall_set*), any, 8) @ libc.so.6+0x10c938(__spawnix*+344)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x10c9a2(__spawnix*+450)
rt_sigreturn(any) @ libc.so.6+0x43097
ioctl(STDIN_FILENO, TCGETS, any) @ libc.so.6+0x11383e(tcsetattr+46)
ioctl(STDIN_FILENO, TCSETS, any) @ libc.so.6+0x1138b2(tcsetattr+162)
ioctl(STDIN_FILENO, TCGETS, any) @ libc.so.6+0x1138db(tcsetattr+203)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x113a18(tcgetattr+40)
ioctl(any u32, 0x24b, 0) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x125e, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x1260, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x1261, 0) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x1268, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x1277-0x127c, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x4c05, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x5331, 0) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, FIONREAD, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFCONF, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFHWADDR, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFINDEX, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, FS_IOC_SETFLAGS, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x80081272, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, FS_IOC_GETFLAGS, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x800875f0, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x80200204, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, 0x80480911, any) @ libc.so.6+0x1143a9(ioctl+9)
pread64(any u32, any, any, any) @ libc.so.6+0x10c168(pread+24)
pread64(any u32, any, any, any) @ libc.so.6+0x10c1ad(pread+93)
pwrite64(any u32, any, any, any) @ libc.so.6+0x10c218(pwrite64+24)
pwrite64(any u32, any, any, any) @ libc.so.6+0x10c25d(pwrite64+93)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0x12387(_dl_debug_vdprintf*+247)
writev(STDERR_FILENO, any, 1) @ libc.so.6+0x8cf58(__libc_message.constprop.0*+232)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x8d1d3(__libc_message*+515)
writev(any u32, any, NULL-0x4) @ libc.so.6+0x114485(writev+21)
writev(STDERR_FILENO, any, 0x8-0x9) @ libc.so.6+0x114485(writev+21)
writev(any u32, any, NULL-0x4) @ libc.so.6+0x1144bb(writev+75)
writev(STDERR_FILENO, any, 0x8-0x9) @ libc.so.6+0x1144bb(writev+75)
access(any, F_OK) @ libc.so.6+0x10e139(access+9)
access(any, W_OK) @ libc.so.6+0x10e139(access+9)
access(any, R_OK) @ libc.so.6+0x10e139(access+9)
pipe(any) @ libc.so.6+0x10e929(__pipe+9)
sched_yield() @ libc.so.6+0x102719(sched_yield+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x11fcac(mremap+12)
msync(non-NULL, any u32, MS_SYNC) @ libc.so.6+0x1189e5(msync+21)
msync(non-NULL, any u32, MS_SYNC) @ libc.so.6+0x118a1d(msync+77)
madvise(NULL-0xfffffffffffffffe, any, MADV_DONTNEED) @ libc.so.6+0x118a79(__madvise+9)
dup(any u32) @ libc.so.6+0x10e899(dup+9)
dup2(any u32, any u32) @ libc.so.6+0x10e8c9(dup2+9)
getpid() @ libc.so.6+0x42fd1(raise+145)
getpid() @ libc.so.6+0xe40c9(__getpid+9)
getpid() @ libc.so.6+0x160c8c(__pthread_unwind*+28)
socket(any u32, any u32, 0) @ libc.so.6+0x1207a9(__socket+9)
socket(AF_INET, any u32, 17) @ libc.so.6+0x1207a9(__socket+9)
socket(AF_INET, SOCK_STREAM, 6) @ libc.so.6+0x1207a9(__socket+9)
connect(any u32, any, 0x10-0x1c) @ libc.so.6+0x1201a5(__connect+21)
connect(any u32, any, 110) @ libc.so.6+0x1201a5(__connect+21)
connect(any u32, any, 0x10-0x1c) @ libc.so.6+0x1201d9(__connect+73)
connect(any u32, any, 110) @ libc.so.6+0x1201d9(__connect+73)
sendto(any u32, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x12052e(send+30)
sendto(any u32, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x12057a(send+106)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x120688(sendto+24)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x1206e2(sendto+114)
recvfrom(any u32, any, any, 0, any, any) @ libc.so.6+0x1203c8(recvfrom+24)
recvfrom(any u32, any, any, MSG_DONTWAIT, any, any) @ libc.so.6+0x1203c8(recvfrom+24)
recvfrom(any u32, any, any, 0, any, any) @ libc.so.6+0x120420(recvfrom+112)
recvfrom(any u32, any, any, MSG_DONTWAIT, any, any) @ libc.so.6+0x120420(recvfrom+112)
recvmsg(any u32, any, 0) @ libc.so.6+0x120485(recvmsg+21)
recvmsg(any u32, any, MSG_ERRQUEUE) @ libc.so.6+0x120485(recvmsg+21)
recvmsg(any u32, any, MSG_CMSG_CLOEXEC) @ libc.so.6+0x120485(recvmsg+21)
recvmsg(any u32, any, 0) @ libc.so.6+0x1204bb(recvmsg+75)
recvmsg(any u32, any, MSG_ERRQUEUE) @ libc.so.6+0x1204bb(recvmsg+75)
recvmsg(any u32, any, MSG_CMSG_CLOEXEC) @ libc.so.6+0x1204bb(recvmsg+75)
bind(any u32, any, 12) @ libc.so.6+0x120169(bind+9)
bind(any u32, any, 16) @ libc.so.6+0x120169(bind+9)
getsockname(any u32, any, any) @ libc.so.6+0x120269(getsockname+9)
getpeername(any u32, any, any) @ libc.so.6+0x120239(getpeername+9)
setsockopt(any u32, SOL_IP, IP_RECVERR, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, IPV6_RECVERR, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xe2f3d(fork+77)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, NULL-0xffffffffffffffed, any, any, any) @ libc.so.6+0x11f123(__clone+51)
clone(SIGCHLD|CLONE_VM|CLONE_VFORK, 0xfffffffffffffff1-0xffffffffffffffff, any, any, any) @ libc.so.6+0x11f123(__clone+51)
exit(0) @ libc.so.6+0x240e4(__libc_start_main+340)
exit(any) @ libc.so.6+0x11f13b(__clone+75)
wait4(any u32, any, 0, 0) @ libc.so.6+0xe2c38(wait4+24)
wait4(any u32, any, 0, 0) @ libc.so.6+0xe2c7d(wait4+93)
kill(any u32, SIGKILL) @ libc.so.6+0x160c9a(__pthread_unwind*+42)
uname(any) @ libc.so.6+0xe2b49(uname+9)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x10e4e9(__fcntl+121)
fcntl(any u32, F_OFD_SETLKW, any) @ libc.so.6+0x10e4e9(__fcntl+121)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x10e535(__fcntl+197)
fcntl(any u32, F_OFD_SETLKW, any) @ libc.so.6+0x10e535(__fcntl+197)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0x1133b3(__GI___fcntl64_nocancel*+67)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x1133b3(__GI___fcntl64_nocancel*+67)
fcntl(any u32, any u32, any) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_GETOWN_EX, any) @ libc.so.6+0x113475(__fcntl64_nocancel_adjusted*+85)
flock(any u32, LOCK_EX) @ libc.so.6+0x10e579(flock+9)
flock(any u32, LOCK_UN) @ libc.so.6+0x10e579(flock+9)
fsync(any u32) @ libc.so.6+0x1151a5(fsync+21)
fsync(any u32) @ libc.so.6+0x1151c9(fsync+57)
ftruncate(any u32, any) @ libc.so.6+0x116cf9(ftruncate64+9)
getcwd(non-NULL, any) @ libc.so.6+0x10eaf0(getcwd+128)
chdir(any) @ libc.so.6+0x10ea19(chdir+9)
fchdir(any u32) @ libc.so.6+0x10ea49(fchdir+9)
rename(any, non-NULL) @ libc.so.6+0x62e89(rename+9)
mkdir(libblkid.so.1+0x412a7, 0755) @ libc.so.6+0x10dc59(mkdir+9)
link(non-NULL, non-NULL) @ libc.so.6+0x10fbb9(link+9)
unlink(any) @ libc.so.6+0x10fcd9(unlink+9)
readlink(non-NULL, any, 4095) @ libc.so.6+0x10fc79(readlink+9)
fchmod(any u32, 0644) @ libc.so.6+0x10db99(fchmod+9)
umask(any u32) @ libc.so.6+0x10db59(umask+9)
gettimeofday(any, any) @ libc.so.6+0xd0ede(__gettimeofday_syscall*+14)
gettimeofday(any, any) @ [vdso]+0x7ff(gettimeofday+271)
getrusage(0, any) @ libc.so.6+0x113de9(getrusage+9)
sysinfo(any) @ libc.so.6+0x11fdc9(sysinfo+9)
getuid() @ libc.so.6+0xe40e9(getuid+9)
getgid() @ libc.so.6+0xe4109(getgid+9)
setuid(any u32) @ libc.so.6+0xe4177(setuid+39)
setuid(any u32) @ libpthread.so.0+0x6cd8(sighandler_setxid+72)
setuid(any u32) @ libpthread.so.0+0x7e69(__nptl_setxid+729)
setgid(any u32) @ libc.so.6+0xe4217(setgid+39)
setgid(any u32) @ libpthread.so.0+0x6cd8(sighandler_setxid+72)
setgid(any u32) @ libpthread.so.0+0x7e69(__nptl_setxid+729)
geteuid() @ libc.so.6+0xe40f9(geteuid+9)
getegid() @ libc.so.6+0xe4119(getegid+9)
setpgid(0, any u32) @ libc.so.6+0xe43a9(__setpgid+9)
getppid() @ libc.so.6+0xe40d9(getppid+9)
setsid() @ libc.so.6+0xe4439(setsid+9)
setresuid(-1 as u32, any u32, -1 as u32) @ libc.so.6+0x10cdf7(__spawni_child*+839)
setresuid(-1 as u32, any u32, -1 as u32) @ libpthread.so.0+0x6cd8(sighandler_setxid+72)
setresuid(-1 as u32, any u32, -1 as u32) @ libpthread.so.0+0x7e69(__nptl_setxid+729)
setresgid(-1 as u32, any u32, -1 as u32) @ libc.so.6+0x10ce20(__spawni_child*+880)
setresgid(-1 as u32, any u32, -1 as u32) @ libpthread.so.0+0x6cd8(sighandler_setxid+72)
setresgid(-1 as u32, any u32, -1 as u32) @ libpthread.so.0+0x7e69(__nptl_setxid+729)
sigaltstack(0, any) @ libc.so.6+0x12f94d(____longjmp_chk*+77)
sched_setparam(0, any) @ libc.so.6+0x102659(sched_setparam+9)
sched_getparam(any u32, any) @ libc.so.6+0x102689(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x1026b9(__sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0x1026e9(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x102749(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x102779(__sched_get_priority_min+9)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ libc.so.6+0x11fd3c(prctl+12)
gettid() @ libc.so.6+0x42fdb(raise+155)
gettid() @ libc.so.6+0x11873b(syscall+27)
time(any) @ libc.so.6+0xd0dc9(time_syscall*+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, any, 0, -1 as u32)
futex(any, any u32, any u32, 0, any, 1)
futex(any, any u32, 1, 0, any, any)
futex(any, any u32, INT_MAX, 0, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any)
futex(any, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
futex(any, FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
getdents64(any u32, any, any) @ libc.so.6+0xde2b9(getdents64+25)
restart_syscall()
fadvise64(any u32, 0, 0, 1) @ libc.so.6+0x112aec(posix_fadvise64+12)
fadvise64(any u32, any, any, 3) @ libc.so.6+0x112aec(posix_fadvise64+12)
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xdd0f2(clock_gettime+98)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xdd0f2(clock_gettime+98)
clock_gettime(any u32, any) @ [vdso]+0x99a(__vdso_clock_gettime+202)
clock_getres(any u32, any) @ [vdso]+0xb9e(__vdso_clock_getres+94)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xdd1b2(clock_nanosleep+82)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xdd23d(clock_nanosleep+221)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd288(clock_nanosleep+296)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd2f9(clock_nanosleep+409)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd31f(clock_nanosleep+447)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd372(clock_nanosleep+530)
exit_group(NULL-0x2) @ ld-linux-x86-64.so.2+0x1f2bc(_exit*+44)
exit_group(127) @ ld-linux-x86-64.so.2+0x1f2bc(_exit*+44)
exit_group(any u32) @ libc.so.6+0xe3144(_Exit+52)
tgkill(any, any u32, SIGABRT) @ libc.so.6+0x42fe7(raise+167)
tgkill(any, any u32, SIGFPE) @ libc.so.6+0x42fe7(raise+167)
tgkill(any u32, any u32, SIGSETXID) @ libpthread.so.0+0x7ca8(__nptl_setxid+280)
tgkill(any u32, any u32, SIGSETXID) @ libpthread.so.0+0x7d08(__nptl_setxid+376)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x10dd39(open+89)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x10ddb2(open+210)
openat(any u32, any, O_RDONLY-O_ACCMODE|O_TRUNC|O_APPEND|O_CLOEXEC, any) @ libc.so.6+0x10deb4(openat64+68)
openat(any u32, any, O_RDONLY-O_ACCMODE|O_TRUNC|O_APPEND|O_CLOEXEC, any) @ libc.so.6+0x10df41(openat64+209)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x1134fa(__open_nocancel+74)
openat(any u32, libc.so.6+0x1b5e38, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x113598(__openat64_nocancel*+56)
newfstatat(any u32, any, any, 0-1) @ libc.so.6+0x10d9bd(__fxstatat+29)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x10d9bd(__fxstatat+29)
faccessat(any u32, libblkid.so.1+0x419a7, F_OK, any) @ libc.so.6+0x10e3b8(faccessat+264)
faccessat(any u32, libblkid.so.1+0x432cd, F_OK, any) @ libc.so.6+0x10e3b8(faccessat+264)
faccessat(any u32, libblkid.so.1+0x432de, F_OK, any) @ libc.so.6+0x10e3b8(faccessat+264)
faccessat(any u32, libblkid.so.1+0x432f4, F_OK, any) @ libc.so.6+0x10e3b8(faccessat+264)
faccessat(any u32, libblkid.so.1+0x4330a, F_OK, any) @ libc.so.6+0x10e3b8(faccessat+264)
set_robust_list(any, 24) @ libpthread.so.0+0x6be5(__nptl_set_robust+21)
fallocate(any u32, 3, NULL-0xfffffffffffffffe, any) @ libc.so.6+0x1132a8(fallocate64+24)
fallocate(any u32, 16, NULL-0xfffffffffffffffe, any) @ libc.so.6+0x1132a8(fallocate64+24)
fallocate(any u32, 3, NULL-0xfffffffffffffffe, any) @ libc.so.6+0x1132ed(fallocate64+93)
fallocate(any u32, 16, NULL-0xfffffffffffffffe, any) @ libc.so.6+0x1132ed(fallocate64+93)
pipe2(any, O_CLOEXEC) @ libc.so.6+0x10e959(pipe2+9)
prlimit64(0, RLIMIT_FSIZE, 0, any) @ libc.so.6+0x113d72(getrlimit+18)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x113d72(getrlimit+18)
prlimit64(0, RLIMIT_FSIZE, any, 0) @ libc.so.6+0x113db3(setrlimit+19)
sendmmsg(any u32, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x120c48(sendmmsg+24)
sendmmsg(any u32, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x120c8c(sendmmsg+92)
getrandom(any, non-NULL, GRND_NONBLOCK) @ libc.so.6+0x48225(getrandom+21)
getrandom(any, non-NULL, GRND_NONBLOCK) @ libc.so.6+0x4825d(getrandom+77)
