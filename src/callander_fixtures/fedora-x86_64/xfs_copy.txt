callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x10815f(__read+15)
read(any u32, any, any) @ libc.so.6+0x108198(__read+72)
read(any u32, any, any) @ libc.so.6+0x1090e6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x108c72(__write+18)
write(any u32, any, any) @ libc.so.6+0x108cab(__write+75)
write(any u32, any, any) @ libc.so.6+0x1091b9(__write_nocancel+9)
close(any u32) @ libc.so.6+0x103592(__close+18)
close(any u32) @ libc.so.6+0x1035ba(__close+58)
close(any u32) @ libc.so.6+0x108d09(__close_nocancel+9)
close(any u32) @ libc.so.6+0x12fad7(__netlink_open+167)
close(any u32) @ libc.so.6+0x12fcf1(getifaddrs_internal+513)
poll(any, NULL-0x1, any u32) @ libc.so.6+0x107b92(poll+18)
poll(any, any, any u32) @ libc.so.6+0x107bcb(poll+75)
lseek(any u32, any, any) @ libc.so.6+0x1076d9(__lseek+9)
mmap(0, any, any u32, any u32, -1 as u32, 0) @ libc.so.6+0x1116aa(mmap+42)
mmap(NULL-0xfffffffffffffffe, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x1116aa(mmap+42)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x1116aa(mmap+42)
mmap(non-NULL, any, PROT_NONE, any u32, -1 as u32, 0) @ libc.so.6+0x1116aa(mmap+42)
mmap(0, any, PROT_NONE-PROT_READ, any u32, any u32, 0) @ libc.so.6+0x11170d(mmap+141)
mmap(0, any, any u32, any u32, -1 as u32, 0) @ libc.so.6+0x11170d(mmap+141)
mprotect(any, any, PROT_READ|PROT_WRITE|PROT_EXEC) @ ld-linux-x86-64.so.2+0x220b9(mprotect+9)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x111fa9(__mprotect+9)
munmap(any, any) @ libc.so.6+0x1120d9(__munmap+9)
brk(any) @ libc.so.6+0x109d79(brk+9)
rt_sigaction(SIGABRT, any, 0, 8) @ libc.so.6+0x3ea88(__libc_sigaction+216)
rt_sigaction(SIGCHLD, any, any, 8) @ libc.so.6+0x3ea88(__libc_sigaction+216)
rt_sigaction(SIGSETXID, any, 0, 8) @ libc.so.6+0x3ea88(__libc_sigaction+216)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x268b5(abort+149)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x8e6d6(start_thread+310)
rt_sigprocmask(SIG_BLOCK, any, 0, 8) @ libc.so.6+0x8e76e(start_thread+462)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1ab4d0(sigall_set), any, 8) @ libc.so.6+0x8efae(pthread_create+1422)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x8f01c(pthread_create+1532)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libc.so.6+0x8f0a5(pthread_create+1669)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x8f2c7(pthread_create+2215)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x8f957(pthread_create+3895)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1ab4d0(sigall_set), any, 8) @ libc.so.6+0x90772(__pthread_kill_implementation+82)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x907be(__pthread_kill_implementation+158)
rt_sigprocmask(SIG_BLOCK-SIG_UNBLOCK, any, any, 8) @ libc.so.6+0x959a6(pthread_sigmask+70)
rt_sigprocmask(SIG_BLOCK-SIG_SETMASK, any, 0, 8) @ libc.so.6+0x959a6(pthread_sigmask+70)
rt_sigreturn(any) @ libc.so.6+0x3e9a7
ioctl(any u32, TCGETS, any) @ libc.so.6+0x1094cc(tcgetattr+44)
ioctl(any u32, _IO(18,96), any) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, _IO(18,97), 0) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, _IO(18,104), any) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, SIOCGIFCONF, any) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, SIOCGIFHWADDR, any) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, _IOR(18,114,8), any) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, _IOR(88,30,12), any) @ libc.so.6+0x11117b(ioctl+59)
ioctl(any u32, _IOR(88,30,12), any) @ libc.so.6+0x11117b(ioctl+59)
pread64(any u32, any, any, any) @ libc.so.6+0xec3e5(__libc_pread+21)
pread64(any u32, any, any, any) @ libc.so.6+0xec423(__libc_pread+83)
pread64(STDIN_FILENO-0xfffffffe, any, 511, any) @ libc.so.6+0x1090ac(__pread64_nocancel+12)
pwrite64(any u32, any, any, any) @ libc.so.6+0xec485(__libc_pwrite+21)
pwrite64(any u32, any, any, any) @ libc.so.6+0xec4c3(__libc_pwrite+83)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0xd35f(_dl_debug_vdprintf+303)
writev(STDERR_FILENO, any, any) @ libc.so.6+0x83b8b(__libc_message+475)
access(/usr/sbin/xfs_copy+0x12619, R_OK) @ libc.so.6+0x1034c9(access+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x115e0f(mremap+47)
madvise(NULL-0xfffffffffffffffe, any, MADV_DONTNEED) @ libc.so.6+0x111449(madvise+9)
madvise(any, any, MADV_HUGEPAGE-MADV_NOHUGEPAGE) @ libc.so.6+0x111449(madvise+9)
madvise(any, 0x1-0xffffffffffffbfff, MADV_DONTNEED) @ libc.so.6+0x111449(madvise+9)
dup(any u32) @ libc.so.6+0x1037d9(dup+9)
getpid() @ libc.so.6+0xe84c9(__getpid+9)
socket(AF_UNIX-AF_INET, SOCK_STREAM-SOCK_DGRAM, 0) @ libc.so.6+0x117d09(socket+9)
socket(AF_INET, any u32, 17) @ libc.so.6+0x117d09(socket+9)
socket(AF_NETLINK, SOCK_RAW|SOCK_CLOEXEC, 0) @ libc.so.6+0x117d09(socket+9)
connect(any u32, any, 110) @ libc.so.6+0x117392(connect+18)
connect(any u32, any, any u32) @ libc.so.6+0x1173c9(connect+73)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x117ac5(sendto+21)
sendto(any u32, any, any, any u32, any, any u32) @ libc.so.6+0x117b12(sendto+98)
recvfrom(any u32, any, any, MSG_DONTWAIT, any, any) @ libc.so.6+0x1176a5(recvfrom+21)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x1176f2(recvfrom+98)
recvmsg(any u32, any, 0) @ libc.so.6+0x11781b(recvmsg+27)
recvmsg(any u32, any, MSG_ERRQUEUE) @ libc.so.6+0x11781b(recvmsg+27)
recvmsg(any u32, any, any u32) @ libc.so.6+0x117859(recvmsg+89)
bind(any u32, any, 12) @ libc.so.6+0x117359(bind+9)
bind(any u32, any, 16) @ libc.so.6+0x117359(bind+9)
getsockname(any u32, any, any) @ libc.so.6+0x117459(getsockname+9)
setsockopt(any u32, SOL_IP, IP_RECVERR, any, 4) @ libc.so.6+0x117b7c(setsockopt+12)
clone(any u32, any, any, any, any) @ libc.so.6+0x115554(__clone+52)
exit(0) @ libc.so.6+0x2816c(__libc_start_call_main+156)
exit(0) @ libc.so.6+0x8e8c4(start_thread+804)
exit(any) @ libc.so.6+0x11556c(__clone+76)
exit(any) @ libc.so.6+0x115704(__GI___clone3+52)
wait4(-1 as u32, any, 0, 0) @ libc.so.6+0xfed05(wait4+21)
wait4(any u32, any, any u32, any) @ libc.so.6+0xfed41(wait4+81)
kill(any u32, SIGKILL) @ libc.so.6+0x3eba9(kill+9)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0x108e10(__fcntl64_nocancel+64)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x108e10(__fcntl64_nocancel+64)
fcntl(STDIN_FILENO-0xfffffffe, F_GETFL, libc.so.6+0x1a0e96) @ libc.so.6+0x108e95(__fcntl64_nocancel_adjusted+37)
fcntl(STDIN_FILENO-0xfffffffe, F_GETFL, libuuid.so.1+0x7038) @ libc.so.6+0x108e95(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_GETFL, 0) @ libc.so.6+0x108e95(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_GETFL, /usr/sbin/xfs_copy+0x12168) @ libc.so.6+0x108e95(__fcntl64_nocancel_adjusted+37)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0x108e95(__fcntl64_nocancel_adjusted+37)
flock(any u32, LOCK_EX) @ libc.so.6+0x1041b9(flock+9)
flock(any u32, LOCK_UN) @ libc.so.6+0x1041b9(flock+9)
fsync(any u32) @ libc.so.6+0x10b252(fsync+18)
fsync(any u32) @ libc.so.6+0x10b27a(fsync+58)
ftruncate(any u32, any) @ libc.so.6+0x10b2d9(ftruncate+9)
getcwd(non-NULL, any) @ libc.so.6+0x106b89(getcwd+137)
mkdir(any, 0700) @ libc.so.6+0x107729(mkdir+9)
unlink(any) @ libc.so.6+0x108b09(unlink+9)
umask(any u32) @ libc.so.6+0x108af9(umask+9)
gettimeofday(any, any) @ libc.so.6+0xcd0fe(__gettimeofday_syscall+14)
gettimeofday(any, any) @ [vdso]+0x7ff(gettimeofday+271)
sysinfo(any) @ libc.so.6+0x116b99(sysinfo+9)
getuid() @ libc.so.6+0xe8579(getuid+9)
getppid() @ libc.so.6+0xe84d9(getppid+9)
fstatfs(any u32, any) @ libc.so.6+0x104269(fstatfs64+9)
sched_getparam(0, any) @ libc.so.6+0x8f591(pthread_create+2929)
sched_getparam(any u32, any) @ libc.so.6+0xfcde9(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x8e527(create_thread+391)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0xfcf39(__sched_setscheduler+9)
sched_getscheduler(0) @ libc.so.6+0x8f564(pthread_create+2884)
sched_getscheduler(any u32) @ libc.so.6+0xfce19(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0xfce49(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0xfce79(__sched_get_priority_min+9)
gettid() @ libc.so.6+0x9081d(__pthread_kill_implementation+253)
gettid() @ libc.so.6+0x1135eb(syscall+27)
time(any) @ libc.so.6+0xccff9(time_syscall+9)
futex(any, FUTEX_WAIT, 0, 0, 0, any)
futex(any, FUTEX_WAIT, NULL-0xfff80002, 0, NULL-0xfff80000, NULL-0xfff80001)
futex(any, FUTEX_WAIT, 0x1-0xffffffff, 0, any, any u32)
futex(any, FUTEX_WAIT, 2, 0, 128, any)
futex(any, FUTEX_WAIT, -1 as u32, 0, 0, any)
futex(any, any u8, 1, 0, any u32, any)
futex(any, any u8, 1, 0, any, any u32)
futex(any, any u8, INT_MAX, 0, any u32, any)
futex(any, any u8, INT_MAX, 0, any, any u32)
futex(any, any u32, any u32, any, 0, -1 as u32)
futex(any, FUTEX_WAKE, 1, 0, any, any)
futex(any, FUTEX_LOCK_PI-FUTEX_UNLOCK_PI, 0, 0, any, any u32)
futex(any, FUTEX_UNLOCK_PI-FUTEX_TRYLOCK_PI, 0, 0, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, NULL-0xfff80002, 0, NULL-0xfff80000, NULL-0xfff80001)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, 202, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, 2, 0, any, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, 1, 0, any, any)
futex(any, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, 0, any, any)
futex(any, FUTEX_LOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any u32)
futex(any, FUTEX_UNLOCK_PI|FUTEX_PRIVATE_FLAG, 0, 0, any, any)
futex(libc.so.6+0x1d972c(once), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, NULL-0x1, any)
futex(libc.so.6+0x1e15e0(authnone_private_guard), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, any, any)
futex(libc.so.6+0x1e1820(once.0), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any u32, 0, any, any)
sched_setaffinity(any u32, any, any) @ libc.so.6+0x8e4d4(create_thread+308)
sched_setaffinity(0, 128, any) @ libc.so.6+0xfced9(sched_setaffinity+9)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x10c0ba(__get_nprocs_sched+58)
getdents64(any u32, any, any) @ libc.so.6+0xd9dc5(getdents64+21)
restart_syscall()
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xd909d(clock_gettime+45)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xd909d(clock_gettime+45)
clock_gettime(any u32, any) @ [vdso]+0x99a(__vdso_clock_gettime+202)
clock_getres(any u32, any) @ [vdso]+0xb9e(__vdso_clock_getres+94)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xd9165(clock_nanosleep+37)
clock_nanosleep(any u32, any u32, any, any) @ libc.so.6+0xd91a1(clock_nanosleep+97)
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x22223(_exit+19)
exit_group(any u32) @ libc.so.6+0xdd95b(_exit+27)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x90801(__pthread_kill_implementation+225)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x90801(__pthread_kill_implementation+225)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x90832(__pthread_kill_implementation+274)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x90832(__pthread_kill_implementation+274)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x107873(__open+83)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x1078e3(__open+195)
openat(any u32, libc.so.6+0x1a2940, O_RDONLY, any) @ libc.so.6+0x1079e0(openat+64)
openat(any u32, any, any u32, any) @ libc.so.6+0x107a55(openat+181)
openat(AT_FDCWD, any, O_RDONLY-O_RDWR|O_CREAT|O_APPEND, any) @ libc.so.6+0x108fb2(__open_nocancel+66)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x108fb2(__open_nocancel+66)
openat(AT_FDCWD, non-NULL, O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC, any) @ libc.so.6+0x108fb2(__open_nocancel+66)
openat(AT_FDCWD, libc.so.6+0x1a3fec, O_RDONLY|O_DIRECTORY, any) @ libc.so.6+0x108fb2(__open_nocancel+66)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x10422c(fstatat64+12)
newfstatat(any u32, libc.so.6+0x1a0bd5, any, AT_EMPTY_PATH) @ libc.so.6+0x10422c(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x10422c(fstatat64+12)
set_robust_list(any, 24) @ libc.so.6+0x8e669(start_thread+201)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x109842(getrlimit+18)
getcpu(any, 0, 0) @ libc.so.6+0x103476(sched_getcpu+86)
getrandom(any, non-NULL, GRND_NONBLOCK) @ libc.so.6+0x41cc2(getrandom+18)
getrandom(any, any, any u32) @ libc.so.6+0x41cfb(getrandom+75)
getrandom(libc.so.6+0x1df178(tcache_key), 8, GRND_NONBLOCK) @ libc.so.6+0x9b607(ptmalloc_init.part.0+55)
membarrier(MEMBARRIER_CMD_QUERY-MEMBARRIER_CMD_GLOBAL, 0) @ libc.so.6+0x1135eb(syscall+27)
membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0) @ libc.so.6+0x1135eb(syscall+27)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ libc.so.6+0x1135eb(syscall+27)
rseq(any, 32, 0, 0x53053053) @ libc.so.6+0x8e851(start_thread+689)
clone3(non-NULL, 88) @ libc.so.6+0x1156eb(__GI___clone3+27)
