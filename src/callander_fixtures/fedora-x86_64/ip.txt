callander: jmp* to unknown address: libzstd.so.1+0x6335f
callander: trace: libzstd.so.1+0x6335b-libzstd.so.1+0x6335f (jmp*)
libzstd.so.1+0x63350-libzstd.so.1+0x63357 (lookup table)
libzstd.so.1+0x63330-libzstd.so.1+0x6334e (conditional continue (no jump))
libzstd.so.1+0x62ce1-libzstd.so.1+0x62d0f (conditional jump)
libzstd.so.1+0x62cd8-libzstd.so.1+0x62cdb (conditional continue)
libzstd.so.1+0x62c11-libzstd.so.1+0x62ca7 (conditional jump)
libzstd.so.1+0x62c00-libzstd.so.1+0x62c0b (conditional continue)
libzstd.so.1+0x62b50-libzstd.so.1+0x62b94 (conditional jump)
libzstd.so.1+0x6c486 (call)
libzstd.so.1+0x6c76b-libzstd.so.1+0x6c788 (conditional jump)
libzstd.so.1+0x6c310-libzstd.so.1+0x6c322 (conditional jump (no continue))
libzstd.so.1+0x6a701-libzstd.so.1+0x6a721 (conditional jump (no continue))
libzstd.so.1+0x6a6f4-libzstd.so.1+0x6a6fb (conditional continue)
libzstd.so.1+0x6a6a8-libzstd.so.1+0x6a6f2 (conditional continue)
libzstd.so.1+0x6a698-libzstd.so.1+0x6a6a2 (conditional continue)
libzstd.so.1+0x6a690-libzstd.so.1+0x6a692 (conditional continue)
libzstd.so.1+0x6a67b-libzstd.so.1+0x6a68a (conditional continue)
libzstd.so.1+0x6a661-libzstd.so.1+0x6a675 (conditional continue)
libzstd.so.1+0x6a653-libzstd.so.1+0x6a657 (conditional jump)
libzstd.so.1+0x6b2a0-libzstd.so.1+0x6b2bf (jump)
libzstd.so.1+0x6a579-libzstd.so.1+0x6a582 (conditional jump)
libzstd.so.1+0x6a570-libzstd.so.1+0x6a573 (conditional continue)
libzstd.so.1+0x6a560-libzstd.so.1+0x6a56e (conditional continue)
libzstd.so.1+0x6a612-libzstd.so.1+0x6a614 (conditional jump)
libzstd.so.1+0x6a5db-libzstd.so.1+0x6a60c (conditional continue)
libzstd.so.1+0x6a5d5-libzstd.so.1+0x6a5d9 (conditional continue)
libzstd.so.1+0x6a5c0-libzstd.so.1+0x6a5cf (conditional continue)
libzstd.so.1+0x6a4be-libzstd.so.1+0x6a4c2 (conditional jump)
libzstd.so.1+0x6a49e-libzstd.so.1+0x6a4b8 (conditional continue)
libzstd.so.1+0x6a460-libzstd.so.1+0x6a498 (conditional continue)
libzstd.so.1+0x6f329-libzstd.so.1+0x6f34f (call)
libzstd.so.1+0x6f320-libzstd.so.1+0x6f327 (conditional continue)
libzstd.so.1+0x6f288-libzstd.so.1+0x6f28b (conditional jump)
libzstd.so.1+0x6f27f-libzstd.so.1+0x6f282 (conditional continue)
libzstd.so.1+0x6f273-libzstd.so.1+0x6f279 (conditional continue)
libzstd.so.1+0x6f26a-libzstd.so.1+0x6f26d (conditional continue)
libzstd.so.1+0x6f256-libzstd.so.1+0x6f264 (conditional continue)
libzstd.so.1+0x6f24d-libzstd.so.1+0x6f250 (conditional continue)
libzstd.so.1+0x6f210-libzstd.so.1+0x6f247 (conditional continue)
libzstd.so.1+0x6f1ff-libzstd.so.1+0x6f20a (conditional continue)
libzstd.so.1+0x6f1e7-libzstd.so.1+0x6f1f9 (conditional continue)
libzstd.so.1+0x6f1da-libzstd.so.1+0x6f1e1 (conditional continue)
libzstd.so.1+0x6f1c0-libzstd.so.1+0x6f1d4 (conditional continue)
libzstd.so.1+0x6f1b6-libzstd.so.1+0x6f1ba (conditional continue)
libzstd.so.1+0x6f163-libzstd.so.1+0x6f1b0 (conditional continue)
libzstd.so.1+0x6f158-libzstd.so.1+0x6f15d (conditional continue)
libzstd.so.1+0x6f146-libzstd.so.1+0x6f152 (conditional continue)
libzstd.so.1+0x6f12e-libzstd.so.1+0x6f140 (conditional continue)
libzstd.so.1+0x6f121-libzstd.so.1+0x6f128 (conditional continue)
libzstd.so.1+0x6f688-libzstd.so.1+0x6f690 (conditional jump)
libzstd.so.1+0x6f3f2-libzstd.so.1+0x6f3fe (conditional jump)
libzstd.so.1+0x6f117-libzstd.so.1+0x6f11b (conditional jump)
libzstd.so.1+0x6f10e-libzstd.so.1+0x6f111 (conditional continue)
libzstd.so.1+0x6f0ca-libzstd.so.1+0x6f108 (conditional continue)
libzstd.so.1+0x6f080-libzstd.so.1+0x6f0c8 (conditional continue)
libzstd.so.1+0x70670(ZSTD_decompress_usingDDict)-libzstd.so.1+0x7067f(ZSTD_decompress_usingDDict+15) (call)
libzstd.so.1+0x706b0(ZSTD_decompressDCtx+32)-libzstd.so.1+0x706fc(ZSTD_decompressDCtx+108) (jump)
libzstd.so.1+0x706ab(ZSTD_decompressDCtx+27)-libzstd.so.1+0x706ae(ZSTD_decompressDCtx+30) (conditional continue)
libzstd.so.1+0x70690(ZSTD_decompressDCtx)-libzstd.so.1+0x706a9(ZSTD_decompressDCtx+25) (conditional continue)
libzstd.so.1+0x70777(ZSTD_decompress+71)-libzstd.so.1+0x70789(ZSTD_decompress+89) (call)
libzstd.so.1+0x70730(ZSTD_decompress)-libzstd.so.1+0x70775(ZSTD_decompress+69) (conditional continue)
libelf.so.1+0x14bc7-libelf.so.1+0x14bd0 (call)
libelf.so.1+0x14ba2-libelf.so.1+0x14bc1 (conditional continue)
libelf.so.1+0x14b72-libelf.so.1+0x14ba0 (conditional continue)
libelf.so.1+0x14b5f-libelf.so.1+0x14b6c (conditional continue)
libelf.so.1+0x14b4e-libelf.so.1+0x14b59 (conditional continue)
libelf.so.1+0x14b3f-libelf.so.1+0x14b48 (conditional continue)
libelf.so.1+0x14b00-libelf.so.1+0x14b39 (conditional continue)
libelf.so.1+0xe493(elf_strptr+659)-libelf.so.1+0xe4a6(elf_strptr+678) (call)
libelf.so.1+0xe405(elf_strptr+517)-libelf.so.1+0xe41d(elf_strptr+541) (conditional jump)
libelf.so.1+0xe2ad(elf_strptr+173)-libelf.so.1+0xe2b1(elf_strptr+177) (conditional jump)
libelf.so.1+0xe2a3(elf_strptr+163)-libelf.so.1+0xe2a7(elf_strptr+167) (conditional continue)
libelf.so.1+0xe29a(elf_strptr+154)-libelf.so.1+0xe29d(elf_strptr+157) (conditional continue)
libelf.so.1+0xe273(elf_strptr+115)-libelf.so.1+0xe294(elf_strptr+148) (conditional continue)
libelf.so.1+0xe268(elf_strptr+104)-libelf.so.1+0xe26d(elf_strptr+109) (conditional continue)
libelf.so.1+0xe260(elf_strptr+96)-libelf.so.1+0xe266(elf_strptr+102) (conditional continue)
libelf.so.1+0xe22d(elf_strptr+45)-libelf.so.1+0xe241(elf_strptr+65) (conditional jump)
libelf.so.1+0xe200(elf_strptr)-libelf.so.1+0xe227(elf_strptr+39) (conditional continue)
libbpf.so.1+0x2843d(bpf_program__attach_uprobe_opts+2349)-libbpf.so.1+0x28451(bpf_program__attach_uprobe_opts+2369) (call)
libbpf.so.1+0x2842f(bpf_program__attach_uprobe_opts+2335)-libbpf.so.1+0x2843b(bpf_program__attach_uprobe_opts+2347) (conditional continue)
libbpf.so.1+0x2841d(bpf_program__attach_uprobe_opts+2317)-libbpf.so.1+0x2842d(bpf_program__attach_uprobe_opts+2333) (conditional continue)
libbpf.so.1+0x28410(bpf_program__attach_uprobe_opts+2304)-libbpf.so.1+0x28417(bpf_program__attach_uprobe_opts+2311) (conditional continue)
libbpf.so.1+0x2841d(bpf_program__attach_uprobe_opts+2317)-libbpf.so.1+0x2842d(bpf_program__attach_uprobe_opts+2333) (conditional jump)
libbpf.so.1+0x28410(bpf_program__attach_uprobe_opts+2304)-libbpf.so.1+0x28417(bpf_program__attach_uprobe_opts+2311) (conditional continue)
libbpf.so.1+0x2841d(bpf_program__attach_uprobe_opts+2317)-libbpf.so.1+0x2842d(bpf_program__attach_uprobe_opts+2333) (conditional jump)
libbpf.so.1+0x28410(bpf_program__attach_uprobe_opts+2304)-libbpf.so.1+0x28417(bpf_program__attach_uprobe_opts+2311) (conditional continue)
libbpf.so.1+0x2841d(bpf_program__attach_uprobe_opts+2317)-libbpf.so.1+0x2842d(bpf_program__attach_uprobe_opts+2333) (conditional jump)
libbpf.so.1+0x28410(bpf_program__attach_uprobe_opts+2304)-libbpf.so.1+0x28417(bpf_program__attach_uprobe_opts+2311) (conditional continue)
libbpf.so.1+0x2841d(bpf_program__attach_uprobe_opts+2317)-libbpf.so.1+0x2842d(bpf_program__attach_uprobe_opts+2333) (conditional jump)
libbpf.so.1+0x28410(bpf_program__attach_uprobe_opts+2304)-libbpf.so.1+0x28417(bpf_program__attach_uprobe_opts+2311) (conditional continue)
libbpf.so.1+0x2841d(bpf_program__attach_uprobe_opts+2317)-libbpf.so.1+0x2842d(bpf_program__attach_uprobe_opts+2333) (conditional jump)
libbpf.so.1+0x283df(bpf_program__attach_uprobe_opts+2255)-libbpf.so.1+0x2840d(bpf_program__attach_uprobe_opts+2301) (jump)
libbpf.so.1+0x283c3(bpf_program__attach_uprobe_opts+2227)-libbpf.so.1+0x283d9(bpf_program__attach_uprobe_opts+2249) (conditional continue)
libbpf.so.1+0x283a0(bpf_program__attach_uprobe_opts+2192)-libbpf.so.1+0x283bd(bpf_program__attach_uprobe_opts+2221) (conditional continue)
libbpf.so.1+0x27d67(bpf_program__attach_uprobe_opts+599)-libbpf.so.1+0x27d79(bpf_program__attach_uprobe_opts+617) (conditional jump)
libbpf.so.1+0x27d5f(bpf_program__attach_uprobe_opts+591)-libbpf.so.1+0x27d65(bpf_program__attach_uprobe_opts+597) (conditional continue)
libbpf.so.1+0x27d4f(bpf_program__attach_uprobe_opts+575)-libbpf.so.1+0x27d5d(bpf_program__attach_uprobe_opts+589) (conditional continue)
libbpf.so.1+0x27ccd(bpf_program__attach_uprobe_opts+445)-libbpf.so.1+0x27d49(bpf_program__attach_uprobe_opts+569) (conditional continue)
libbpf.so.1+0x27cab(bpf_program__attach_uprobe_opts+411)-libbpf.so.1+0x27cc7(bpf_program__attach_uprobe_opts+439) (conditional continue)
libbpf.so.1+0x27c91(bpf_program__attach_uprobe_opts+385)-libbpf.so.1+0x27ca5(bpf_program__attach_uprobe_opts+405) (conditional continue)
libbpf.so.1+0x27c66(bpf_program__attach_uprobe_opts+342)-libbpf.so.1+0x27c8b(bpf_program__attach_uprobe_opts+379) (conditional continue)
libbpf.so.1+0x27c52(bpf_program__attach_uprobe_opts+322)-libbpf.so.1+0x27c60(bpf_program__attach_uprobe_opts+336) (conditional continue)
libbpf.so.1+0x27c48(bpf_program__attach_uprobe_opts+312)-libbpf.so.1+0x27c4c(bpf_program__attach_uprobe_opts+316) (conditional continue)
libbpf.so.1+0x27c3f(bpf_program__attach_uprobe_opts+303)-libbpf.so.1+0x27c42(bpf_program__attach_uprobe_opts+306) (conditional continue (no jump))
libbpf.so.1+0x27c25(bpf_program__attach_uprobe_opts+277)-libbpf.so.1+0x27c39(bpf_program__attach_uprobe_opts+297) (conditional continue)
libbpf.so.1+0x27c14(bpf_program__attach_uprobe_opts+260)-libbpf.so.1+0x27c23(bpf_program__attach_uprobe_opts+275) (conditional continue)
libbpf.so.1+0x28170(bpf_program__attach_uprobe_opts+1632)-libbpf.so.1+0x28189(bpf_program__attach_uprobe_opts+1657) (jump)
libbpf.so.1+0x27bb0(bpf_program__attach_uprobe_opts+160)-libbpf.so.1+0x27bb7(bpf_program__attach_uprobe_opts+167) (conditional jump)
libbpf.so.1+0x27bbd(bpf_program__attach_uprobe_opts+173)-libbpf.so.1+0x27bc0(bpf_program__attach_uprobe_opts+176) (conditional jump)
libbpf.so.1+0x27ba2(bpf_program__attach_uprobe_opts+146)-libbpf.so.1+0x27ba5(bpf_program__attach_uprobe_opts+149) (jump)
libbpf.so.1+0x27b95(bpf_program__attach_uprobe_opts+133)-libbpf.so.1+0x27ba0(bpf_program__attach_uprobe_opts+144) (conditional continue)
libbpf.so.1+0x27b88(bpf_program__attach_uprobe_opts+120)-libbpf.so.1+0x27b8f(bpf_program__attach_uprobe_opts+127) (conditional continue)
libbpf.so.1+0x27b10(bpf_program__attach_uprobe_opts)-libbpf.so.1+0x27b86(bpf_program__attach_uprobe_opts+118) (conditional continue)
libbpf.so.1+0x28a28-libbpf.so.1+0x28a43 (call)
libbpf.so.1+0x28a1b-libbpf.so.1+0x28a22 (conditional continue)
libbpf.so.1+0x289fc-libbpf.so.1+0x28a15 (conditional continue)
libbpf.so.1+0x289f3-libbpf.so.1+0x289f6 (conditional continue)
libbpf.so.1+0x289f0 (primary result)
libbpf.so.1+0x2899c (conditional jump)
libbpf.so.1+0x28910-libbpf.so.1+0x28996 (conditional continue)
libbpf.so.1+0x57e50 (.data.rel.ro)
