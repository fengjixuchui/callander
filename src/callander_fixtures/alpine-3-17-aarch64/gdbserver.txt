callander: permitted syscalls: getcwd(any, 0x1000) @ ld-musl-aarch64.so.1+0x64710(getcwd+36)
fcntl(any, any, any) @ ld-musl-aarch64.so.1+0x2107c(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x2111c(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45510(socketpair+184)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45518(socketpair+192)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45530(socketpair+216)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45538(socketpair+224)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x50854(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x64b78(pipe2+112)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x64b80(pipe2+120)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x64b98(pipe2+144)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x64ba0(pipe2+152)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51464(__stdout_write*+56)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65190(unlink+24)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9b2e1, 0x20002, any) @ ld-musl-aarch64.so.1+0x20548(__init_libc*+380)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5d210
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x1ff28(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x51180(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x5d210
close(any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
pipe2(/usr/bin/gdbserver+0x903e8, 0) @ ld-musl-aarch64.so.1+0x64af8(pipe+16)
pipe2(/usr/bin/gdbserver+0x903e8, any) @ ld-musl-aarch64.so.1+0x64b2c(pipe2+36)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1ff70(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x64a28(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x512b0(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x512b0(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51388(__stdio_write*+76)
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5d210
pread64(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20520(__init_libc*+340)
readlinkat(AT_FDCWD, any, any, 1) @ ld-musl-aarch64.so.1+0x64cc8(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x50870(fstatat64+136)
newfstatat(any, any, any, any) @ ld-musl-aarch64.so.1+0x508a4(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x50838(fstatat64+80)
exit(any) @ ld-musl-aarch64.so.1+0x5d1b0
exit(0) @ ld-musl-aarch64.so.1+0x5e8d0(pthread_exit+396)
exit_group(any) @ ld-musl-aarch64.so.1+0x20bd4(_Exit+12)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, 0, any)
futex(any, any, 1, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(0x15-0x100000013, FUTEX_REQUEUE, 0, 1, any, any)
futex(0x15-0x100000013, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(libgcc_s.so.1+0x300d4, FUTEX_WAKE, INT_MAX, libgcc_s.so.1+0x300d4, any, any)
futex(libgcc_s.so.1+0x300d4, FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, libgcc_s.so.1+0x300d4, any, any)
futex(libgcc_s.so.1+0x3027c, any, any, any, any, any)
futex(libstdc++.so.6+0x240264, any, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb0410(maplock*), any, any, ld-musl-aarch64.so.1+0xb0410(maplock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1118(lock*), any, any, ld-musl-aarch64.so.1+0xb1118(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1158(key_lock*), any, any, ld-musl-aarch64.so.1+0xb1158(key_lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1dc0, FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb1dc0, any, any)
futex(ld-musl-aarch64.so.1+0xb1dec, any, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb1e58(lock*), any, any, ld-musl-aarch64.so.1+0xb1e58(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb2230(__thread_list_lock*), any, any, 0, 0xacbb32d8, ld-musl-aarch64.so.1+0xb2230(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*), FUTEX_WAIT, any, 0, any u32, ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*))
futex(ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*))
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), any, any, 0, 0xacbb3330, ld-musl-aarch64.so.1+0xb232c(vmlock*))
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb232c(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb232c(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5e898(pthread_exit+340)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x5f918(__pthread_mutex_trylock_owner*+204)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x62794(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
ptrace(any, any, any, any) @ ld-musl-aarch64.so.1+0x24824(ptrace+104)
restart_syscall()
kill(any, any) @ ld-musl-aarch64.so.1+0x4fb54(kill+20)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20c34(abort+84)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x24500(membarrier+304)
tkill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
tkill(any, SIGCONT-SIGSTOP) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
tkill(any, any) @ ld-musl-aarch64.so.1+0x4fc9c(raise+44)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20c20(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x4fde0(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20c4c(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6e528(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x4fadc(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6e520(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x4fafc(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x4fb18(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x4fe68(__libc_sigaction*+376)
rt_sigprocmask(any, any, any, 8) @ ld-musl-aarch64.so.1+0x605cc(pthread_sigmask+24)
getpid() @ ld-musl-aarch64.so.1+0x648f4(getpid+4)
getppid() @ ld-musl-aarch64.so.1+0x64900(getppid+4)
gettid() @ ld-musl-aarch64.so.1+0x47774(_Fork+84)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x453c8(socket+40)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45400(socket+96)
socketpair(any, any, any, any) @ ld-musl-aarch64.so.1+0x45494(socketpair+60)
socketpair(any, any, any, any) @ ld-musl-aarch64.so.1+0x454ec(socketpair+148)
connect(any, any, 110) @ ld-musl-aarch64.so.1+0x5d210
connect(any, any, 110) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
sendmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
sendmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b5b4(__malloc_alloc_meta*+296)
brk(any) @ ld-musl-aarch64.so.1+0x2b5d4(__malloc_alloc_meta*+328)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+440)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e8bc(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5d1a8
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, any, any) @ ld-musl-aarch64.so.1+0x3e818(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x4775c(_Fork+60)
mmap(any, any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
mprotect(any, any, any) @ ld-musl-aarch64.so.1+0x3e77c(mprotect+56)
madvise(any, any, any) @ ld-musl-aarch64.so.1+0x3e614(madvise+16)
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5d210
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
setns(any, any) @ ld-musl-aarch64.so.1+0x24a00(setns+20)
membarrier(any, any) @ ld-musl-aarch64.so.1+0x243f4(membarrier+36)
