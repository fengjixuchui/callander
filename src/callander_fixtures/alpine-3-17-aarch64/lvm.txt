callander: permitted syscalls: io_setup(any, 0x21-0x10000001f) @ ld-musl-aarch64.so.1+0x3dbd0(syscall+172)
fcntl(any, any, any) @ ld-musl-aarch64.so.1+0x2107c(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x2111c(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x50854(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x50db8(fdopen+176)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x5257c(fopen64+148)
ioctl(any, any, any) @ ld-musl-aarch64.so.1+0x3cb94(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x50e34(fdopen+300)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51464(__stdout_write*+56)
flock(any, any) @ ld-musl-aarch64.so.1+0x242b4(flock+20)
mkdirat(AT_FDCWD, any, 0777) @ ld-musl-aarch64.so.1+0x50a1c(mkdir+28)
mkdirat(AT_FDCWD, /sbin/lvm+0x17a9eb, 0755) @ ld-musl-aarch64.so.1+0x50a1c(mkdir+28)
mkdirat(AT_FDCWD, /sbin/lvm+0x17aae7, 0755) @ ld-musl-aarch64.so.1+0x50a1c(mkdir+28)
mkdirat(AT_FDCWD, /sbin/lvm+0x17b43b, 0755) @ ld-musl-aarch64.so.1+0x50a1c(mkdir+28)
mkdirat(AT_FDCWD, /sbin/lvm+0x19d850, 0755) @ ld-musl-aarch64.so.1+0x50a1c(mkdir+28)
unlinkat(AT_FDCWD, /sbin/lvm+0x4e7260, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x64db0(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65190(unlink+24)
symlinkat(/sbin/lvm+0x4e3260, AT_FDCWD, /sbin/lvm+0x4e4260) @ ld-musl-aarch64.so.1+0x64f88(symlink+20)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x549dc(rename+32)
faccessat(AT_FDCWD, any, any) @ ld-musl-aarch64.so.1+0x64150(access+32)
faccessat(any, libblkid.so.1+0x3cc58, any) @ ld-musl-aarch64.so.1+0x643e8(faccessat+56)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9b2e1, 0x20002, any) @ ld-musl-aarch64.so.1+0x20548(__init_libc*+380)
openat(AT_FDCWD, any, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, any, O_RDWR|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, any, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, 0x1-0xffffffff, O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, /sbin/lvm+0x19a833, O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, /sbin/lvm+0x1a433e, O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, /sbin/lvm+0x1a436f, O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(AT_FDCWD, /sbin/lvm+0x1a44ce, O_WRONLY|O_CREAT|O_TRUNC, 0666) @ ld-musl-aarch64.so.1+0x52558(fopen64+112)
openat(any, non-NULL, any, any) @ ld-musl-aarch64.so.1+0x5d210
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5d210
openat(any, libblkid.so.1+0x3d060, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
openat(any, libblkid.so.1+0x4003a, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
openat(AT_FDCWD, any, 10, any) @ ld-musl-aarch64.so.1+0x612b0(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x1ff28(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x51180(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52598(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5d210
close(any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x612e4(__map_file*+96)
close(any) @ ld-musl-aarch64.so.1+0x6132c(__map_file*+168)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x1ff70(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x64a28(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x512b0(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5d210
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x512b0(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51388(__stdio_write*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20520(__init_libc*+340)
readlinkat(AT_FDCWD, any, any, 4095) @ ld-musl-aarch64.so.1+0x64cc8(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x50870(fstatat64+136)
newfstatat(any, any, any, any) @ ld-musl-aarch64.so.1+0x508a4(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x50838(fstatat64+80)
fstat(any, any) @ ld-musl-aarch64.so.1+0x612d0(__map_file*+76)
exit(any) @ ld-musl-aarch64.so.1+0x5d1b0
exit(0) @ ld-musl-aarch64.so.1+0x5e8d0(pthread_exit+396)
exit_group(any) @ ld-musl-aarch64.so.1+0x20bd4(_Exit+12)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, 0, any)
futex(any, any, 1, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(0x15-0x100000013, FUTEX_REQUEUE, 0, 1, any, any)
futex(0x15-0x100000013, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(ld-musl-aarch64.so.1+0xb1158(key_lock*), any, any, ld-musl-aarch64.so.1+0xb1158(key_lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1dec, any, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb1e58(lock*), any, any, ld-musl-aarch64.so.1+0xb1e58(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb2230(__thread_list_lock*), any, any, 0, 0x75dae2d8, ld-musl-aarch64.so.1+0xb2230(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*), FUTEX_WAIT, any, 0, any u32, ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*))
futex(ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, ld-musl-aarch64.so.1+0xb2248(freebuf_queue_lock*))
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), any, any, 0, 0x75dae330, ld-musl-aarch64.so.1+0xb232c(vmlock*))
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb232c(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb232c(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb232c(vmlock*), any, any)
futex(/sbin/lvm+0x4eb35c, any, any, any, any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5e898(pthread_exit+340)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x5f918(__pthread_mutex_trylock_owner*+204)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5d210
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x62794(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20c34(abort+84)
tkill(any, any) @ ld-musl-aarch64.so.1+0x4fc9c(raise+44)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20c20(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x4fde0(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20c4c(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6e528(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x4fadc(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6e520(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x4fafc(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x4fb18(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x4fe68(__libc_sigaction*+376)
rt_sigprocmask(any, 0, any, 8) @ ld-musl-aarch64.so.1+0x605cc(pthread_sigmask+24)
rt_sigprocmask(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x605cc(pthread_sigmask+24)
rt_sigprocmask(any, any, /sbin/lvm+0x4e0020, 8) @ ld-musl-aarch64.so.1+0x605cc(pthread_sigmask+24)
setpriority(any, 0, any) @ ld-musl-aarch64.so.1+0x3da54(setpriority+24)
getpriority(any, 0) @ ld-musl-aarch64.so.1+0x3c938(getpriority+20)
uname(any) @ ld-musl-aarch64.so.1+0x3e148(uname+12)
getrlimit(any, any) @ ld-musl-aarch64.so.1+0x3ca00(getrlimit+112)
umask(any u32) @ ld-musl-aarch64.so.1+0x50ca4(umask+16)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x627b4(clock_gettime+104)
getpid() @ ld-musl-aarch64.so.1+0x648f4(getpid+4)
getuid() @ ld-musl-aarch64.so.1+0x6492c(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x647a0(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x647ac(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x64794(getegid+4)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x453c8(socket+40)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45400(socket+96)
connect(any, ld-musl-aarch64.so.1+0x94f0e(log_addr*), 12) @ ld-musl-aarch64.so.1+0x5d210
connect(any, ld-musl-aarch64.so.1+0x94f0e(log_addr*), 12) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
sendto(any, any, any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5d210
sendto(any, any, any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dcc8(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b5b4(__malloc_alloc_meta*+296)
brk(any) @ ld-musl-aarch64.so.1+0x2b5d4(__malloc_alloc_meta*+328)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+440)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e8bc(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5d1a8
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, any, any) @ ld-musl-aarch64.so.1+0x3e818(mremap+140)
mmap(any, any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x3e710(mmap+148)
fadvise64(any, 0, 0, any) @ ld-musl-aarch64.so.1+0x211c0(posix_fadvise64+12)
mprotect(any, any, any) @ ld-musl-aarch64.so.1+0x3e77c(mprotect+56)
mlock(any, any) @ ld-musl-aarch64.so.1+0x3e64c(mlock+12)
mlockall(any) @ ld-musl-aarch64.so.1+0x3e66c(mlockall+16)
madvise(any, any, any) @ ld-musl-aarch64.so.1+0x3e614(madvise+16)
prlimit64(any, any, 0, any) @ ld-musl-aarch64.so.1+0x2478c(prlimit64+20)
prlimit64(0, any, 0, any) @ ld-musl-aarch64.so.1+0x3c9bc(getrlimit+44)
