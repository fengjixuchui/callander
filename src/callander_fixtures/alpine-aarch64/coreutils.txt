callander: permitted syscalls: setxattr(any, libacl.so.1+0x5cc0, non-NULL, any, any) @ ld-musl-aarch64.so.1+0x24df0(setxattr+16)
setxattr(any, libacl.so.1+0x5d00, non-NULL, any, any) @ ld-musl-aarch64.so.1+0x24df0(setxattr+16)
lsetxattr(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x24e10(lsetxattr+16)
fsetxattr(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x24e34(fsetxattr+20)
getxattr(any, libacl.so.1+0x5cc0, 0, 0) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
getxattr(any, libacl.so.1+0x5d00, 0, 0) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
lgetxattr(any, any, any, any) @ ld-musl-aarch64.so.1+0x24da0(lgetxattr+4)
fgetxattr(any, any, any, any) @ ld-musl-aarch64.so.1+0x24db0(fgetxattr+8)
llistxattr(any, any, any) @ ld-musl-aarch64.so.1+0x24dc8(llistxattr+4)
flistxattr(any, any, any) @ ld-musl-aarch64.so.1+0x24dd8(flistxattr+8)
removexattr(any, libacl.so.1+0x5cc0) @ ld-musl-aarch64.so.1+0x24e50(removexattr+12)
getcwd(any, 0x1000) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
getcwd(0x1-0xffffffff, 0x1-0xffffffff) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
dup3(any, any, 0) @ ld-musl-aarch64.so.1+0x64dd8(dup2+28)
dup3(any, any, any) @ ld-musl-aarch64.so.1+0x64e3c(dup3+28)
fcntl(any, F_DUPFD_CLOEXEC, 3) @ ld-musl-aarch64.so.1+0x210d8(fcntl+236)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x210f8(fcntl+268)
fcntl(any, F_DUPFD_CLOEXEC, 0) @ ld-musl-aarch64.so.1+0x2110c(fcntl+288)
fcntl(any, F_DUPFD, 3) @ ld-musl-aarch64.so.1+0x2113c(fcntl+336)
fcntl(any, any, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x51098(fchmod+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x51810(fdopen+208)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x51828(fdopen+232)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x519c8(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x538fc(freopen+96)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x5391c(freopen+128)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x64e0c(dup2+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x650a0(fchdir+76)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x65128(fchown+96)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656b8(pipe2+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656c0(pipe2+144)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x656d8(pipe2+168)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x656e0(pipe2+176)
inotify_add_watch(any, any, any u32) @ ld-musl-aarch64.so.1+0x24470(inotify_add_watch+20)
inotify_rm_watch(any, any) @ ld-musl-aarch64.so.1+0x24494(inotify_rm_watch+20)
ioctl(any, any, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x65474(isatty+24)
mknodat(AT_FDCWD, any, 0-060777, any) @ ld-musl-aarch64.so.1+0x514c4(mknod+36)
mknodat(any, any, any u32, any) @ ld-musl-aarch64.so.1+0x514e8(mknodat+20)
mkdirat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
mkdirat(any, any, any u32) @ ld-musl-aarch64.so.1+0x51478(mkdirat+20)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x5541c(remove+24)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x55430(remove+44)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x559c4(tmpfile64+124)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x658f0(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65cd0(unlink+24)
unlinkat(any, any, any) @ ld-musl-aarch64.so.1+0x65cf4(unlinkat+20)
symlinkat(any, any, any) @ ld-musl-aarch64.so.1+0x65ae8(symlinkat+16)
linkat(AT_FDCWD, any, AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x6550c(link+36)
linkat(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x65534(linkat+24)
renameat(any, any, any, any) @ ld-musl-aarch64.so.1+0x658c8(renameat+20)
statfs(any, any) @ ld-musl-aarch64.so.1+0x51540(statfs64+52)
fstatfs(any, any) @ ld-musl-aarch64.so.1+0x51588(fstatfs64+52)
ftruncate(any, 0) @ ld-musl-aarch64.so.1+0x65204(ftruncate64+16)
faccessat(any, any, any) @ ld-musl-aarch64.so.1+0x64f10(faccessat+56)
chdir(any) @ ld-musl-aarch64.so.1+0x64cf8(chdir+12)
chdir(any) @ ld-musl-aarch64.so.1+0x650c0(fchdir+108)
fchdir(any) @ ld-musl-aarch64.so.1+0x6506c(fchdir+24)
chroot(any) @ ld-musl-aarch64.so.1+0x24160(chroot+12)
fchmod(any, any u32) @ ld-musl-aarch64.so.1+0x51068(fchmod+32)
fchmodat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x51038(chmod+28)
fchmodat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x510c0(fchmod+120)
fchmodat(any, any, any u32) @ ld-musl-aarch64.so.1+0x510f4(fchmodat+44)
fchownat(AT_FDCWD, any, any u32, any u32, 0) @ ld-musl-aarch64.so.1+0x65158(fchown+144)
fchownat(any, any, any u32, any u32, any) @ ld-musl-aarch64.so.1+0x6517c(fchownat+28)
fchown(any, any u32, any u32) @ ld-musl-aarch64.so.1+0x650f4(fchown+44)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, 0x20002, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(any, any, 40, any) @ ld-musl-aarch64.so.1+0x51164(fchmodat+156)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c06a, 0x20000|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x519a8(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c2c6, 0x20000|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x519a8(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, O_RDWR, any) @ ld-musl-aarch64.so.1+0x559a4(tmpfile64+92)
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(any, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, 10, any) @ ld-musl-aarch64.so.1+0x61dbc(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x21124(fcntl+312)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x559e8(tmpfile64+160)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x61de4(__map_file*+84)
close(any) @ ld-musl-aarch64.so.1+0x61e30(__map_file*+160)
close(any) @ ld-musl-aarch64.so.1+0x64ff0(faccessat+280)
close(any) @ ld-musl-aarch64.so.1+0x65008(faccessat+304)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x65620(pipe+16)
pipe2(any, any) @ ld-musl-aarch64.so.1+0x65654(pipe2+36)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
ppoll(0, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
ppoll(any, 2, any, 0, 8) @ ld-musl-aarch64.so.1+0x5dc8c
ppoll(0, 0, 0, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
ppoll(any, 2, any, 0, 8) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readlinkat(AT_FDCWD, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
readlinkat(any, any, any, non-NULL) @ ld-musl-aarch64.so.1+0x6585c(readlinkat+32)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, any, any, any) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
sync() @ ld-musl-aarch64.so.1+0x65afc(sync+4)
fsync(any) @ ld-musl-aarch64.so.1+0x5dc8c
fsync(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
fdatasync(any) @ ld-musl-aarch64.so.1+0x5dc8c
fdatasync(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
utimensat(any, any, any, any) @ ld-musl-aarch64.so.1+0x51720(utimensat+52)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(any) @ ld-musl-aarch64.so.1+0x5dc64
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
futex(any, any, any, any, any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
setitimer(any, any, any) @ ld-musl-aarch64.so.1+0x5070c(setitimer+16)
timer_create(any, 0, any) @ ld-musl-aarch64.so.1+0x646e0(timer_create+144)
timer_settime(CLOCK_REALTIME-0x7fffffff, any, any, 0) @ ld-musl-aarch64.so.1+0x6492c(timer_settime+32)
clock_settime(any, any) @ ld-musl-aarch64.so.1+0x6337c(clock_settime+16)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any, any) @ ld-musl-aarch64.so.1+0x631d0(clock_getres+16)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
sched_setscheduler(any, any, any) @ ld-musl-aarch64.so.1+0x5f8a8(pthread_create+1040)
sched_getaffinity(0, 128, any) @ ld-musl-aarch64.so.1+0x1c8f8(sysconf+256)
sched_getaffinity(any, 128, any) @ ld-musl-aarch64.so.1+0x4f7f4(do_getaffinity*+8)
restart_syscall()
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x24a8c(do_setgroups*+76)
kill(any, any) @ ld-musl-aarch64.so.1+0x50590(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x65a38(do_setxid*+76)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any, any) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x61b18(__synccall*+404)
tkill(any, SIGCANCEL) @ ld-musl-aarch64.so.1+0x6489c(timer_delete+40)
rt_sigsuspend(any, 8) @ ld-musl-aarch64.so.1+0x5dc8c
rt_sigsuspend(any, 8) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(any, any, any, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
setpriority(any, 0, any) @ ld-musl-aarch64.so.1+0x3db0c(setpriority+24)
getpriority(any, 0) @ ld-musl-aarch64.so.1+0x3c9cc(getpriority+20)
setpgid(any, any) @ ld-musl-aarch64.so.1+0x65950(setpgid+20)
getgroups(any, NULL-0x100000003) @ ld-musl-aarch64.so.1+0x652ec(getgroups+16)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x24a60(do_setgroups*+32)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x5f544(pthread_create+172)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x65a0c(do_setxid*+32)
uname(any) @ ld-musl-aarch64.so.1+0x3e200(uname+12)
getrlimit(any, any) @ ld-musl-aarch64.so.1+0x3ca94(getrlimit+112)
umask(any u32) @ ld-musl-aarch64.so.1+0x516dc(umask+16)
prctl(any, any u32, any, any, any) @ ld-musl-aarch64.so.1+0x24844(prctl+104)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
getpid() @ ld-musl-aarch64.so.1+0x24a80(do_setgroups*+64)
getpid() @ ld-musl-aarch64.so.1+0x65a2c(do_setxid*+64)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x652d4(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x652bc(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x61aa8(__synccall*+292)
sysinfo(any) @ ld-musl-aarch64.so.1+0x24c64(sysinfo+12)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5dc8c
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41e94(getsockname+28)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, any, any) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
clone(0, any, any, any, any) @ ld-musl-aarch64.so.1+0x5dc4c
clone(125, any, any, any, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x5dc4c
mmap(any, any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
fadvise64(any, 0, 0, any) @ ld-musl-aarch64.so.1+0x212a8(posix_fadvise64+12)
mprotect(any, any, any) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
wait4(any, any, __WCLONE, 0) @ ld-musl-aarch64.so.1+0x65020(faccessat+328)
prlimit64(0, any, 0, any) @ ld-musl-aarch64.so.1+0x3ca50(getrlimit+44)
renameat2(any u32, any, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
getrandom(any, any, 0-GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x5dc8c
getrandom(any, any, 0-GRND_NONBLOCK) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
membarrier(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, 0) @ ld-musl-aarch64.so.1+0x2462c(__membarrier_init*+12)
faccessat2(any, any, any, any) @ ld-musl-aarch64.so.1+0x64f44(faccessat+108)
