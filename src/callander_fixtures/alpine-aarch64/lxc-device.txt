callander: permitted syscalls: epoll_create1(any) @ ld-musl-aarch64.so.1+0x24220(epoll_create1+16)
dup3(any u32, any, 0) @ ld-musl-aarch64.so.1+0x64dd8(dup2+28)
fcntl(any, any, 0) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(STDOUT_FILENO, F_GETFD, any) @ ld-musl-aarch64.so.1+0x64e0c(dup2+80)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656b8(pipe2+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x656c0(pipe2+144)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x656d8(pipe2+168)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x656e0(pipe2+176)
ioctl(any, any, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
mkdirat(AT_FDCWD, non-NULL, 0755) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x658f0(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65cd0(unlink+24)
mount(any, any, /usr/bin/lxc-device+0xdf621, any, any) @ ld-musl-aarch64.so.1+0x246c4(mount+12)
statfs(any, any) @ ld-musl-aarch64.so.1+0x51540(statfs64+52)
faccessat(AT_FDCWD, any, any) @ ld-musl-aarch64.so.1+0x64c78(access+32)
chroot(any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, 0x20002, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, /usr/bin/lxc-device+0xd1f4e, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
pipe2(any, 0) @ ld-musl-aarch64.so.1+0x65620(pipe+16)
pipe2(any, any) @ ld-musl-aarch64.so.1+0x65654(pipe2+36)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, 5) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 100) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 5) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
read(any, any, 100) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, any, any, any) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
capset(any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, 0, any)
futex(any, any, 1, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(0x15-0x100000013, FUTEX_REQUEUE, 0, 1, any, any)
futex(0x15-0x100000013, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(ld-musl-aarch64.so.1+0xb0418(maplock*), any, any, ld-musl-aarch64.so.1+0xb0418(maplock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1120(lock*), any, any, ld-musl-aarch64.so.1+0xb1120(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1160(key_lock*), any, any, ld-musl-aarch64.so.1+0xb1160(key_lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1df4, any, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb1e60(lock*), any, any, ld-musl-aarch64.so.1+0xb1e60(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), any, any, 0, 0x98d882e4, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2288(__malloc_lock*), FUTEX_WAIT, any, 0, any u32, ld-musl-aarch64.so.1+0xb2288(__malloc_lock*))
futex(ld-musl-aarch64.so.1+0xb2288(__malloc_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, ld-musl-aarch64.so.1+0xb2288(__malloc_lock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any, 0, 0x98d8833c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any, any) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
setgid(any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
setuid(any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
setgroups(any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
getrlimit(any, any) @ ld-musl-aarch64.so.1+0x3ca94(getrlimit+112)
umask(any u32) @ ld-musl-aarch64.so.1+0x516dc(umask+16)
prctl(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
getpid() @ ld-musl-aarch64.so.1+0x6541c(getpid+4)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getegid() @ ld-musl-aarch64.so.1+0x652bc(getegid+4)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
connect(any, ld-musl-aarch64.so.1+0x95b16(log_addr*), 12) @ ld-musl-aarch64.so.1+0x5dc8c
connect(any, ld-musl-aarch64.so.1+0x95b16(log_addr*), 12) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendto(any, any, 16, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendto(any, any, 264, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendto(any, non-NULL, any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendto(any, any, 16, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendto(any, any, 264, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendto(any, non-NULL, any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
sendmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
sendmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, any, any) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
mmap(any, any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(any, any, any) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
prlimit64(0, any, 0, any) @ ld-musl-aarch64.so.1+0x3ca50(getrlimit+44)
memfd_create(/usr/bin/lxc-device+0xe4d8b, MFD_CLOEXEC) @ ld-musl-aarch64.so.1+0x24644(memfd_create+16)
pidfd_send_signal(any u32, any u32, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
open_tree(0xfffffff7, 0, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
move_mount(0xfffffff7, 0, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
fsopen(0, 0) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
fsconfig(0xfffffff7, 0xffffffea, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
fsmount(0xfffffff7, 0, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-device+0xe29fd, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-device+0xe2a53, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(any u32, /usr/bin/lxc-device+0xe338a, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
openat2(0xfffffff7, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
mount_setattr(0xfffffff7, 0, any, any, any) @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
