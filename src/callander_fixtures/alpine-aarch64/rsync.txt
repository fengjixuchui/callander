callander: permitted syscalls: lsetxattr(any, any, non-NULL, any, any) @ ld-musl-aarch64.so.1+0x24e10(lsetxattr+16)
getxattr(0x1-0xffffffff, libacl.so.1+0x5cc0, any, any) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
getxattr(0x1-0xffffffff, libacl.so.1+0x5d00, any, any) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
getxattr(/usr/bin/rsync+0x4d173, libacl.so.1+0x5cc0, any, any) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
getxattr(/usr/bin/rsync+0x4d173, libacl.so.1+0x5d00, any, any) @ ld-musl-aarch64.so.1+0x24d94(getxattr+4)
lgetxattr(any, any, any, any) @ ld-musl-aarch64.so.1+0x24da0(lgetxattr+4)
llistxattr(any, any, any) @ ld-musl-aarch64.so.1+0x24dc8(llistxattr+4)
getcwd(0xb0e28584, 4095) @ ld-musl-aarch64.so.1+0x65238(getcwd+36)
dup3(STDOUT_FILENO--1 as u32, any, 0) @ ld-musl-aarch64.so.1+0x64dd8(dup2+28)
fcntl(any, any, any) @ ld-musl-aarch64.so.1+0x21164(fcntl+376)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45d9c(socketpair+184)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x45da4(socketpair+192)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45dbc(socketpair+216)
fcntl(any, F_SETFL, 2048) @ ld-musl-aarch64.so.1+0x45dc4(socketpair+224)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x51098(fchmod+80)
fcntl(any, F_GETFD, any) @ ld-musl-aarch64.so.1+0x5128c(fstatat64+108)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x517f0(fdopen+176)
fcntl(any, F_GETFL, any) @ ld-musl-aarch64.so.1+0x51810(fdopen+208)
fcntl(any, F_SETFL, any) @ ld-musl-aarch64.so.1+0x51828(fdopen+232)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x519c8(__fopen_rb_ca*+96)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x52fd4(fopen64+148)
fcntl(STDIN_FILENO, F_GETFD, any) @ ld-musl-aarch64.so.1+0x64e0c(dup2+80)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x5186c(fdopen+300)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
mkdirat(AT_FDCWD, any, any u32) @ ld-musl-aarch64.so.1+0x51454(mkdir+28)
unlinkat(AT_FDCWD, any, AT_REMOVEDIR) @ ld-musl-aarch64.so.1+0x658f0(rmdir+24)
unlinkat(AT_FDCWD, any, 0) @ ld-musl-aarch64.so.1+0x65cd0(unlink+24)
linkat(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x65534(linkat+24)
renameat(AT_FDCWD, any, AT_FDCWD, any) @ ld-musl-aarch64.so.1+0x55464(rename+32)
faccessat(AT_FDCWD, any, any) @ ld-musl-aarch64.so.1+0x64c78(access+32)
chdir(0x1-0xffffffff) @ ld-musl-aarch64.so.1+0x64cf8(chdir+12)
chdir(/usr/bin/rsync+0x79584) @ ld-musl-aarch64.so.1+0x64cf8(chdir+12)
chroot(0x1-0xffffffff) @ ld-musl-aarch64.so.1+0x24160(chroot+12)
fchmod(any, 0-0700) @ ld-musl-aarch64.so.1+0x51068(fchmod+32)
fchmodat(AT_FDCWD, any, 0-07777) @ ld-musl-aarch64.so.1+0x51038(chmod+28)
fchmodat(AT_FDCWD, any, 0-0700) @ ld-musl-aarch64.so.1+0x510c0(fchmod+120)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, 0x20002, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(any, any, 40, any) @ ld-musl-aarch64.so.1+0x51164(fchmodat+156)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c06a, 0x20000|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x519a8(__fopen_rb_ca*+64)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c2c6, 0x20000|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x519a8(__fopen_rb_ca*+64)
openat(AT_FDCWD, any, O_WRONLY|O_CREAT|O_APPEND, 0666) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, non-NULL, O_RDONLY, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c31c, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9c332, O_RDONLY|O_CLOEXEC, any) @ ld-musl-aarch64.so.1+0x52fb0(fopen64+112)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
openat(AT_FDCWD, any, 10, any) @ ld-musl-aarch64.so.1+0x61dbc(__map_file*+44)
close(any) @ ld-musl-aarch64.so.1+0x20014(opendir+56)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x52ff0(fopen64+176)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x61de4(__map_file*+84)
close(any) @ ld-musl-aarch64.so.1+0x61e30(__map_file*+160)
getdents64(any, any, 2048) @ ld-musl-aarch64.so.1+0x2005c(readdir64+44)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
pselect6(any, any, any, any, 0, any) @ ld-musl-aarch64.so.1+0x5dc8c
pselect6(any, any, any, any, 0, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
readlinkat(AT_FDCWD, any, any, 4095) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
newfstatat(any, any, any, AT_EMPTY_PATH) @ ld-musl-aarch64.so.1+0x512a8(fstatat64+136)
newfstatat(any, any, any, any) @ ld-musl-aarch64.so.1+0x512dc(fstatat64+188)
fstat(any, any) @ ld-musl-aarch64.so.1+0x51270(fstatat64+80)
utimensat(any, any, any, any) @ ld-musl-aarch64.so.1+0x51720(utimensat+52)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
set_tid_address(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*)) @ ld-musl-aarch64.so.1+0x48040(_Fork+128)
futex(any, FUTEX_WAIT, any, 0, any, any u32)
futex(any, any, any, 0, 0, any)
futex(any, any, 1, any, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any u32)
futex(0x15-0x100000013, FUTEX_REQUEUE, 0, 1, any, any)
futex(0x15-0x100000013, FUTEX_REQUEUE|FUTEX_PRIVATE_FLAG, 0, 1, any, any)
futex(ld-musl-aarch64.so.1+0xb0418(maplock*), any, any, ld-musl-aarch64.so.1+0xb0418(maplock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1120(lock*), any, any, ld-musl-aarch64.so.1+0xb1120(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1160(key_lock*), any, any, ld-musl-aarch64.so.1+0xb1160(key_lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb1df4, any, any, any, any, any)
futex(ld-musl-aarch64.so.1+0xb1e60(lock*), any, any, ld-musl-aarch64.so.1+0xb1e60(lock*), any u32, any u32)
futex(ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*), any, any, 0, 0xb0dae2e4, ld-musl-aarch64.so.1+0xb2240(__thread_list_lock*))
futex(ld-musl-aarch64.so.1+0xb2288(__malloc_lock*), FUTEX_WAIT, any, 0, any u32, ld-musl-aarch64.so.1+0xb2288(__malloc_lock*))
futex(ld-musl-aarch64.so.1+0xb2288(__malloc_lock*), FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any u32, ld-musl-aarch64.so.1+0xb2288(__malloc_lock*))
futex(ld-musl-aarch64.so.1+0xb2314(target_sem*), any, any, ld-musl-aarch64.so.1+0xb2314(target_sem*), 0, any u32)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any, 0, 0xb0dae33c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any, 0, ld-musl-aarch64.so.1+0xb233c, ld-musl-aarch64.so.1+0xb2338(vmlock*))
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
futex(ld-musl-aarch64.so.1+0xb2338(vmlock*), FUTEX_WAKE|FUTEX_PRIVATE_FLAG, INT_MAX, ld-musl-aarch64.so.1+0xb2338(vmlock*), any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
setitimer(any, any, any) @ ld-musl-aarch64.so.1+0x5070c(setitimer+16)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
kill(any, any) @ ld-musl-aarch64.so.1+0x50590(kill+20)
kill(any, SIGKILL) @ ld-musl-aarch64.so.1+0x65a38(do_setxid*+76)
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any, any) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
tkill(any, SIGSYNCCALL) @ ld-musl-aarch64.so.1+0x61b18(__synccall*+404)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
rt_sigprocmask(any, any, 0, 8) @ ld-musl-aarch64.so.1+0x610e8(pthread_sigmask+24)
setsid() @ ld-musl-aarch64.so.1+0x659c8(setsid+12)
getgroups(any, any) @ ld-musl-aarch64.so.1+0x652ec(getgroups+16)
umask(any u32) @ ld-musl-aarch64.so.1+0x516dc(umask+16)
gettimeofday(any, 0) @ ld-musl-aarch64.so.1+0x632d0(clock_gettime+104)
getpid() @ ld-musl-aarch64.so.1+0x6541c(getpid+4)
getpid() @ ld-musl-aarch64.so.1+0x65a2c(do_setxid*+64)
getuid() @ ld-musl-aarch64.so.1+0x65454(getuid+4)
geteuid() @ ld-musl-aarch64.so.1+0x652c8(geteuid+4)
getgid() @ ld-musl-aarch64.so.1+0x652d4(getgid+4)
getegid() @ ld-musl-aarch64.so.1+0x652bc(getegid+4)
gettid() @ ld-musl-aarch64.so.1+0x61aa8(__synccall*+292)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45c54(socket+40)
socket(any, any, any) @ ld-musl-aarch64.so.1+0x45c8c(socket+96)
socketpair(any, any, any, any) @ ld-musl-aarch64.so.1+0x45d20(socketpair+60)
socketpair(any, any, any, any) @ ld-musl-aarch64.so.1+0x45d78(socketpair+148)
bind(any, any, any u32) @ ld-musl-aarch64.so.1+0x3fd4c(bind+32)
listen(any, any) @ ld-musl-aarch64.so.1+0x42aa8(listen+36)
accept(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
accept(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5dc8c
connect(any, any, any u32) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
getsockname(any, any, any) @ ld-musl-aarch64.so.1+0x41e94(getsockname+28)
getpeername(any, any, any) @ ld-musl-aarch64.so.1+0x41ae0(getpeername+28)
sendto(any, any, any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5dc8c
sendto(any, any, any, any, 0, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
setsockopt(any, any, any, any, 4) @ ld-musl-aarch64.so.1+0x45bbc(setsockopt+32)
getsockopt(any, any, any, any, any) @ ld-musl-aarch64.so.1+0x41ec0(getsockopt+28)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, any, any) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
clone(SIGCHLD, 0, any, any, any) @ ld-musl-aarch64.so.1+0x47ff8(_Fork+56)
mmap(any, any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(any, any, any) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
wait4(any, any, any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
