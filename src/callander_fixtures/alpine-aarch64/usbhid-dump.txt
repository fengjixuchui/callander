callander: permitted syscalls: eventfd2(0, any) @ ld-musl-aarch64.so.1+0x242d8(eventfd+20)
fcntl(any, F_SETFD, 1) @ ld-musl-aarch64.so.1+0x21204(open+136)
ioctl(any, any, any) @ ld-musl-aarch64.so.1+0x3cc28(ioctl+52)
ioctl(any, TIOCGWINSZ, any) @ ld-musl-aarch64.so.1+0x51e9c(__stdout_write*+56)
openat(AT_FDCWD, ld-musl-aarch64.so.1+0x9bee9, 0x20002, any) @ ld-musl-aarch64.so.1+0x20630(__init_libc*+380)
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
openat(AT_FDCWD, any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
close(any) @ ld-musl-aarch64.so.1+0x51bb8(__stdio_close*+24)
close(any) @ ld-musl-aarch64.so.1+0x5dc8c
close(any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
lseek(any, any, any) @ ld-musl-aarch64.so.1+0x65550(lseek64+12)
read(any, any, any) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
read(any, any, 8) @ ld-musl-aarch64.so.1+0x5dc8c
read(any, any, 8) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
write(any, any, 8) @ ld-musl-aarch64.so.1+0x5dc8c
write(any, any, 8) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
readv(any, any, 2) @ ld-musl-aarch64.so.1+0x51ce8(__stdio_read*+76)
writev(any, any, any) @ ld-musl-aarch64.so.1+0x51dc0(__stdio_write*+76)
ppoll(any, 3, any, 0, 8) @ ld-musl-aarch64.so.1+0x20608(__init_libc*+340)
readlinkat(AT_FDCWD, any, any, 4095) @ ld-musl-aarch64.so.1+0x65808(readlink+44)
timerfd_create(any, any) @ ld-musl-aarch64.so.1+0x24ca0(timerfd_create+20)
exit(any) @ ld-musl-aarch64.so.1+0x5dc2c
exit(0) @ ld-musl-aarch64.so.1+0x5f384(pthread_exit+400)
exit_group(any) @ ld-musl-aarch64.so.1+0x20cbc(_Exit+12)
futex(any, any, any, any, any, any)
set_robust_list(0, 24) @ ld-musl-aarch64.so.1+0x5f358(pthread_exit+356)
set_robust_list(any, 24) @ ld-musl-aarch64.so.1+0x60434(__pthread_mutex_trylock_owner*+204)
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x5dc8c
nanosleep(any, 0) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
clock_gettime(any, any) @ ld-musl-aarch64.so.1+0x632b0(clock_gettime+72)
clock_gettime(any u32, any) @ [vdso]+0x37c(__kernel_clock_gettime+188)
clock_getres(any u32, any) @ [vdso]+0x76c(__kernel_clock_getres+100)
restart_syscall()
tkill(any, SIGABRT) @ ld-musl-aarch64.so.1+0x20d1c(abort+84)
tkill(any, any) @ ld-musl-aarch64.so.1+0x506d8(raise+44)
rt_sigaction(SIGABRT, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d08(abort+64)
rt_sigaction(any, any, any, 8) @ ld-musl-aarch64.so.1+0x5081c(__libc_sigaction*+240)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x20d34(abort+108)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f118(all_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50518(__block_all_sigs*+24)
rt_sigprocmask(SIG_BLOCK, ld-musl-aarch64.so.1+0x6f110(app_mask*), any, 8) @ ld-musl-aarch64.so.1+0x50538(__block_app_sigs*+24)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ ld-musl-aarch64.so.1+0x50554(__restore_sigs*+20)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ ld-musl-aarch64.so.1+0x508a4(__libc_sigaction*+376)
uname(any) @ ld-musl-aarch64.so.1+0x3e200(uname+12)
gettid() @ ld-musl-aarch64.so.1+0x3dc88(syscall+172)
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5dc8c
recvmsg(any, any, any) @ ld-musl-aarch64.so.1+0x5e778(__syscall_cp_c*+76)
brk(0) @ ld-musl-aarch64.so.1+0x2b624(__malloc_alloc_meta*+304)
brk(any) @ ld-musl-aarch64.so.1+0x2b644(__malloc_alloc_meta*+336)
brk(any) @ ld-musl-aarch64.so.1+0x2b6b4(__malloc_alloc_meta*+448)
munmap(any, any) @ ld-musl-aarch64.so.1+0x3e974(munmap+36)
munmap(any, any) @ ld-musl-aarch64.so.1+0x5dc24
mremap(any, NULL-0xfffffffffffff000, NULL-0xfffffffffffff000, any, any) @ ld-musl-aarch64.so.1+0x3e8d0(mremap+140)
mmap(any, any, any, any, any, 0) @ ld-musl-aarch64.so.1+0x3e7c8(mmap+148)
mprotect(any, any, any) @ ld-musl-aarch64.so.1+0x3e834(mprotect+56)
mprotect(any, any, PROT_READ) @ ld-musl-aarch64.so.1+0x66cb8(reloc_all*+364)
