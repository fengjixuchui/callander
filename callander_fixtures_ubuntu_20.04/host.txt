callander: permitted syscalls: read(any u32, any, any) @ libpthread.so.0+0x13390(__read+16)
read(any u32, any, any) @ libpthread.so.0+0x133ca(__read+74)
read(any u32, any, any) @ libc.so.6+0x10dfd0(read+16)
read(any u32, any, any) @ libc.so.6+0x10e00a(read+74)
read(any u32, any, any) @ libc.so.6+0x113606(__read_nocancel+6)
write(any u32, any, any) @ libpthread.so.0+0x132f5(__write+21)
write(any u32, any, any) @ libpthread.so.0+0x1332d(__write+77)
write(any u32, any, any) @ libc.so.6+0x10e075(write+21)
write(any u32, any, any) @ libc.so.6+0x10e0ad(write+77)
write(any u32, any, any) @ libc.so.6+0x113679(__write_nocancel+9)
close(any u32) @ libpthread.so.0+0x13435(close+21)
close(any u32) @ libpthread.so.0+0x13459(close+57)
close(any u32) @ libc.so.6+0x10e815(__close+21)
close(any u32) @ libc.so.6+0x10e839(__close+57)
close(any u32) @ libc.so.6+0x113349(__close_nocancel+9)
close(any u32) @ libc.so.6+0x11873b(syscall+27)
close(any u32) @ libc.so.6+0x13a667(__netlink_open*+183)
close(any u32) @ libc.so.6+0x13a84c(getifaddrs_internal*+460)
stat(any, any) @ libc.so.6+0x10d4b8(__xstat+24)
fstat(any u32, any) @ libc.so.6+0x10d517(__fxstat+23)
lstat(any, any) @ libc.so.6+0x10d578(__lxstat64+24)
poll(any, any, any u32) @ libc.so.6+0x112965(poll+21)
poll(any, any, any u32) @ libc.so.6+0x11299d(poll+77)
lseek(any u32, any, any u32) @ libpthread.so.0+0x13999(lseek64+9)
lseek(any u32, any, any) @ libc.so.6+0x10e109(lseek64+9)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ ld-linux-x86-64.so.2+0x1f184(mmap64*+36)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ ld-linux-x86-64.so.2+0x1f1ce(mmap64*+110)
mmap(0, any, any u32, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE, any u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE, any u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, 0x8000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(NULL-0xfffffffffffffffe, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(any, 0x4000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x1188e4(mmap+36)
mmap(0, any, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, any u32, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_STACK, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ, MAP_SHARED-MAP_PRIVATE|MAP_32BIT, any u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_32BIT, any u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, any, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, 0x4000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mmap(0, 0x8000000, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_32BIT|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x118935(mmap+117)
mprotect(any, any, any u32) @ libc.so.6+0x1189a9(__mprotect+9)
munmap(any, any) @ libc.so.6+0x118979(munmap+9)
brk(NULL-0xfffffffffffffffe) @ libc.so.6+0x114289(brk+9)
rt_sigaction(any, any, 0, 8) @ libpthread.so.0+0x144f4(__libc_sigaction+196)
rt_sigaction(SIGHUP-SIGFPE, any, any, 8) @ libpthread.so.0+0x144f4(__libc_sigaction+196)
rt_sigaction(SIGSEGV, any, any, 8) @ libpthread.so.0+0x144f4(__libc_sigaction+196)
rt_sigaction(SIGPIPE-SIGSYS, any, any, 8) @ libpthread.so.0+0x144f4(__libc_sigaction+196)
rt_sigaction(SIGABRT, any, 0, 8) @ libc.so.6+0x43164(__libc_sigaction*+196)
rt_sigaction(SIGALRM, any, any, 8) @ libc.so.6+0x43164(__libc_sigaction*+196)
rt_sigaction(SIGWINCH, any, any, 8) @ libc.so.6+0x43164(__libc_sigaction*+196)
rt_sigprocmask(SIG_UNBLOCK, any, 0, 8) @ libpthread.so.0+0x874f(start_thread+543)
rt_sigprocmask(SIG_BLOCK-SIG_UNBLOCK, any, 0, 8) @ libpthread.so.0+0x10e89(pthread_sigmask+73)
rt_sigprocmask(SIG_SETMASK, any, any, 8) @ libpthread.so.0+0x10e89(pthread_sigmask+73)
rt_sigprocmask(SIG_BLOCK, any, any, 8) @ libc.so.6+0x42fc8(raise+136)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x43009(raise+201)
rt_sigprocmask(SIG_UNBLOCK-SIG_SETMASK, any, 0, 8) @ libc.so.6+0x43309(sigprocmask+73)
rt_sigreturn(any) @ libpthread.so.0+0x14427
rt_sigreturn(any) @ libc.so.6+0x43097
ioctl(any u32, TCGETS, any) @ libc.so.6+0x11383e(tcsetattr+46)
ioctl(any u32, TCSETS, any) @ libc.so.6+0x1138b2(tcsetattr+162)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x1138db(tcsetattr+203)
ioctl(any u32, TCGETS, any) @ libc.so.6+0x113a18(tcgetattr+40)
ioctl(STDIN_FILENO-0xfffffffe, FIONBIO, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, FIONREAD, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFNAME, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFCONF, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFNETMASK, any) @ libc.so.6+0x1143a9(ioctl+9)
ioctl(any u32, SIOCGIFINDEX, any) @ libc.so.6+0x1143a9(ioctl+9)
pread64(any u32, any, 12, 2) @ libpthread.so.0+0x13c28(pread+24)
pread64(any u32, any, any, any) @ libpthread.so.0+0x13c6d(pread+93)
pread64(any u32, any, 384, any) @ libc.so.6+0x11363c(__pread64_nocancel+12)
readv(any u32, any, any u32) @ libc.so.6+0x1143e5(readv+21)
readv(any u32, any, any u32) @ libc.so.6+0x11441b(readv+75)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0x12387(_dl_debug_vdprintf*+247)
writev(STDERR_FILENO, NULL-0xfffffffffffffff0, 1) @ libc.so.6+0x8cf58(__libc_message.constprop.0*+232)
writev(STDERR_FILENO, NULL-0xfffffffffffffff0, any) @ libc.so.6+0x8d1d3(__libc_message*+515)
writev(any u32, any, NULL-0x2) @ libc.so.6+0x114485(writev+21)
writev(any u32, any, 4) @ libc.so.6+0x114485(writev+21)
writev(any u32, any, any u32) @ libc.so.6+0x1144bb(writev+75)
access(any, F_OK) @ libc.so.6+0x10e139(access+9)
access(any, R_OK) @ libc.so.6+0x10e139(access+9)
pipe(any) @ libc.so.6+0x10e929(__pipe+9)
select(any u32, any, 0, any, any) @ libc.so.6+0x114f78(select+24)
select(any u32, any, any, any, any) @ libc.so.6+0x114fc9(select+105)
sched_yield() @ libc.so.6+0x102719(sched_yield+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x11fcac(mremap+12)
madvise(NULL-0xfffffffffffffffe, any, MADV_DONTNEED) @ libc.so.6+0x118a79(__madvise+9)
madvise(any, 0x1-0xffffffffffffbfff, MADV_DONTNEED) @ libc.so.6+0x118a79(__madvise+9)
shmget(114, 1, 0) @ libc.so.6+0x1211fc(shmget+12)
shmget(114, 1, 292|IPC_CREAT) @ libc.so.6+0x1211fc(shmget+12)
shmat(NULL-0xfffffffe, 0, SHM_NORESERVE) @ libc.so.6+0x121199(shmat+9)
dup(any u32) @ libc.so.6+0x10e899(dup+9)
alarm(any u32) @ libc.so.6+0xe2d99(alarm+9)
getpid() @ libc.so.6+0x42fd1(raise+145)
getpid() @ libc.so.6+0xe40c9(__getpid+9)
getpid() @ libc.so.6+0x160c8c(__pthread_unwind*+28)
socket(any u32, any u32, any u32) @ libc.so.6+0x1207a9(__socket+9)
connect(any u32, any, any u32) @ libpthread.so.0+0x13565(__connect+21)
connect(any u32, any, any u32) @ libpthread.so.0+0x13599(__connect+73)
connect(any u32, any, any u32) @ libc.so.6+0x1201a5(__connect+21)
connect(any u32, any, any u32) @ libc.so.6+0x1201d9(__connect+73)
accept(any u32, any, any) @ libpthread.so.0+0x134c5(accept+21)
accept(any u32, any, any) @ libpthread.so.0+0x134fd(accept+77)
sendto(any u32, any, any, 0, 0, 0) @ libpthread.so.0+0x1378e(__send+30)
sendto(any u32, any, any, MSG_NOSIGNAL, 0, 0) @ libpthread.so.0+0x1378e(__send+30)
sendto(any u32, any, any, any u32, 0, 0) @ libpthread.so.0+0x137da(__send+106)
sendto(any u32, any, any, 0, any, any u32) @ libpthread.so.0+0x13848(sendto+24)
sendto(any u32, any, any, any u32, any, any u32) @ libpthread.so.0+0x138a2(sendto+114)
sendto(any u32, any, any, MSG_NOSIGNAL, 0, 0) @ libc.so.6+0x12052e(send+30)
sendto(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x12057a(send+106)
sendto(any u32, any, any, 0, any, any u32) @ libc.so.6+0x120688(sendto+24)
sendto(any u32, any, any, any u32, any, any u32) @ libc.so.6+0x1206e2(sendto+114)
recvfrom(any u32, any, any, 0, 0, 0) @ libpthread.so.0+0x1360e(recv+30)
recvfrom(any u32, any, any, any u32, 0, 0) @ libpthread.so.0+0x1365a(recv+106)
recvfrom(any u32, any, any, 0, any, any) @ libpthread.so.0+0x136c8(recvfrom+24)
recvfrom(any u32, non-NULL, any, any u32, any, any) @ libpthread.so.0+0x136c8(recvfrom+24)
recvfrom(any u32, any, any, any u32, any, any) @ libpthread.so.0+0x13720(recvfrom+112)
recvfrom(any u32, any, any, MSG_DONTWAIT, any, any) @ libc.so.6+0x1203c8(recvfrom+24)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x120420(recvfrom+112)
sendmsg(any u32, any, 0) @ libpthread.so.0+0x14155(sendmsg+21)
sendmsg(any u32, any, MSG_NOSIGNAL) @ libpthread.so.0+0x14155(sendmsg+21)
sendmsg(any u32, any, any u32) @ libpthread.so.0+0x1418b(sendmsg+75)
recvmsg(any u32, any, 0) @ libpthread.so.0+0x140b5(recvmsg+21)
recvmsg(any u32, any, any u32) @ libpthread.so.0+0x140eb(recvmsg+75)
recvmsg(any u32, any, 0) @ libc.so.6+0x120485(recvmsg+21)
recvmsg(any u32, any, MSG_ERRQUEUE) @ libc.so.6+0x120485(recvmsg+21)
recvmsg(any u32, any, MSG_CMSG_CLOEXEC) @ libc.so.6+0x120485(recvmsg+21)
recvmsg(any u32, any, any u32) @ libc.so.6+0x1204bb(recvmsg+75)
shutdown(STDIN_FILENO-0xfffffffe, SHUT_RDWR) @ libc.so.6+0x120779(shutdown+9)
bind(any u32, any, any u32) @ libc.so.6+0x120169(bind+9)
listen(STDIN_FILENO-0xfffffffe, 0x1000) @ libc.so.6+0x1202c9(listen+9)
listen(any u32, 1) @ libc.so.6+0x1202c9(listen+9)
getsockname(any, any, any) @ libc.so.6+0x120269(getsockname+9)
getpeername(any u32, any, any) @ libc.so.6+0x120239(getpeername+9)
setsockopt(STDIN_FILENO-0xfffffffe, SOL_SOCKET, SO_LINGER, libkrb5.so.3+0xb4e38, 8) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IP, SO_OOBINLINE-IP_RECVERR, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IP, SO_LINGER, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IP-SOL_SOCKET, SO_DEBUG-SO_REUSEADDR, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_SNDBUF, libisc.so.1601+0x736c0, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, SO_RCVBUF-SO_KEEPALIVE, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, 0xf, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, 0x14-0x15, any, 16) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_SOCKET, 0x1d, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, IPPROTO_TCP, SO_DEBUG-SO_REUSEADDR, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, TCP_FASTOPEN-0x1a, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, 0x31, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, 0x3e, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
setsockopt(any u32, SOL_IPV6, 0x42-0x43, any, 4) @ libc.so.6+0x12074c(setsockopt+12)
getsockopt(any u32, SOL_IP, 0xe, any, any) @ libc.so.6+0x12029c(getsockopt+12)
getsockopt(any u32, SOL_SOCKET, SO_TYPE-SO_ERROR, any, any) @ libc.so.6+0x12029c(getsockopt+12)
getsockopt(any u32, SOL_SOCKET, SO_SNDBUF-SO_RCVBUF, any, any) @ libc.so.6+0x12029c(getsockopt+12)
getsockopt(any u32, SOL_SOCKET, 0x14-0x15, any, any) @ libc.so.6+0x12029c(getsockopt+12)
getsockopt(any u32, SOL_IPV6, 0x18, any, any) @ libc.so.6+0x12029c(getsockopt+12)
clone(CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, any, any, any, any) @ libc.so.6+0x11f123(__clone+51)
exit(0) @ libpthread.so.0+0x86c4(start_thread+404)
exit(0) @ libc.so.6+0x240e4(__libc_start_main+340)
exit(any) @ libc.so.6+0x11f13b(__clone+75)
kill(any u32, SIGHUP) @ libc.so.6+0x433d9(kill+9)
kill(any u32, SIGTERM) @ libc.so.6+0x433d9(kill+9)
kill(any u32, SIGKILL) @ libc.so.6+0x160c9a(__pthread_unwind*+42)
uname(any) @ libc.so.6+0xe2b49(uname+9)
shmdt(any) @ libc.so.6+0x1211c9(shmdt+9)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x10e4e9(__fcntl+121)
fcntl(any u32, F_OFD_SETLKW, any) @ libc.so.6+0x10e4e9(__fcntl+121)
fcntl(any u32, any u32, any) @ libc.so.6+0x10e535(__fcntl+197)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0x1133b3(__GI___fcntl64_nocancel*+67)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x1133b3(__GI___fcntl64_nocancel*+67)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x1133b3(__GI___fcntl64_nocancel*+67)
fcntl(STDIN_FILENO-0xfffffffe, F_DUPFD, 0x1-0xffffffff) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_GETFD, any) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_SETFD, any u32) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_SETFL, any u16) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_SETLK, any) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_OFD_SETLK, any) @ libc.so.6+0x113442(__fcntl64_nocancel_adjusted*+34)
flock(any u32, 0x1-0x2) @ libc.so.6+0x10e579(flock+9)
flock(any u32, 0x5-0x6) @ libc.so.6+0x10e579(flock+9)
flock(any u32, 8) @ libc.so.6+0x10e579(flock+9)
flock(any u32, 12) @ libc.so.6+0x10e579(flock+9)
fsync(any u32) @ libpthread.so.0+0x13915(fsync+21)
fsync(any u32) @ libpthread.so.0+0x13939(fsync+57)
getcwd(non-NULL, any) @ libc.so.6+0x10eaf0(getcwd+128)
rename(any, any) @ libc.so.6+0x62e89(rename+9)
mkdir(any, 0700) @ libc.so.6+0x10dc59(mkdir+9)
rmdir(any) @ libc.so.6+0x10fd39(rmdir+9)
link(any, any) @ libc.so.6+0x10fbb9(link+9)
unlink(any) @ libc.so.6+0x10fcd9(unlink+9)
readlink(any, non-NULL, 511) @ libc.so.6+0x10fc79(readlink+9)
chmod(any, any) @ libc.so.6+0x10db69(chmod+9)
fchmod(STDIN_FILENO-0xfffffffe, 0600) @ libc.so.6+0x10db99(fchmod+9)
gettimeofday(any, any) @ libc.so.6+0xd0ede(__gettimeofday_syscall*+14)
gettimeofday(any, any) @ [vdso]+0x7ff(gettimeofday+271)
sysinfo(any) @ libc.so.6+0x11fdc9(sysinfo+9)
getuid() @ libc.so.6+0xe40e9(getuid+9)
getgid() @ libc.so.6+0xe4109(getgid+9)
geteuid() @ libc.so.6+0xe40f9(geteuid+9)
getegid() @ libc.so.6+0xe4119(getegid+9)
rt_sigtimedwait(any, any, 0, 8) @ libc.so.6+0x4412d(sigtimedwait+45)
rt_sigtimedwait(any, any, any, 8) @ libc.so.6+0x441a0(sigtimedwait+160)
sched_getparam(0, any) @ libpthread.so.0+0x91f7(pthread_create+2343)
sched_getparam(any u32, any) @ libc.so.6+0x102689(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libpthread.so.0+0x7356(create_thread+214)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x1026b9(__sched_setscheduler+9)
sched_getscheduler(0) @ libpthread.so.0+0x91c7(pthread_create+2295)
sched_getscheduler(any u32) @ libc.so.6+0x1026e9(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x102749(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x102779(__sched_get_priority_min+9)
prctl(PR_GET_DUMPABLE, 0, 0, 0, 0) @ libc.so.6+0x11fd3c(prctl+12)
prctl(PR_SET_NAME, any, any, any, any) @ libc.so.6+0x11fd3c(prctl+12)
sync() @ libc.so.6+0x115229(sync+9)
gettid() @ libc.so.6+0x42fdb(raise+155)
time(any) @ libc.so.6+0xd0dc9(time_syscall*+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, any, 0, -1 as u32)
futex(any, any u32, any u32, 0, any, 1)
futex(any, any u32, 1, 0, any, any)
futex(any, any u32, INT_MAX, 0, any, any)
futex(any, FUTEX_WAIT|FUTEX_PRIVATE_FLAG, any, 0, any, any)
futex(any, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME-FUTEX_WAIT_BITSET|FUTEX_PRIVATE_FLAG|FUTEX_CLOCK_REALTIME, any u32, 0, 0, -1 as u32)
futex(libstdc++.so.6+0x1df6e0, FUTEX_WAKE, INT_MAX, any, any, any)
futex(libstdc++.so.6+0x1e0d48, FUTEX_WAKE, INT_MAX, any, any, any)
futex(libstdc++.so.6+0x1e1528, FUTEX_WAKE, INT_MAX, any, any, any)
sched_setaffinity(any u32, any, non-NULL) @ libpthread.so.0+0x7324(create_thread+164)
sched_setaffinity(any u32, 128, any) @ libpthread.so.0+0x1473f(pthread_setaffinity_np+15)
epoll_create(any u32) @ libc.so.6+0x11fa99(epoll_create+9)
getdents64(any u32, any, any) @ libc.so.6+0xde2b9(getdents64+25)
restart_syscall()
clock_gettime(CLOCK_REALTIME-CLOCK_MONOTONIC, any) @ libc.so.6+0xdd0f2(clock_gettime+98)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xdd0f2(clock_gettime+98)
clock_gettime(CLOCK_BOOTTIME, any) @ libc.so.6+0xdd0f2(clock_gettime+98)
clock_gettime(any u32, any) @ [vdso]+0x99a(__vdso_clock_gettime+202)
clock_getres(any u32, any) @ [vdso]+0xb9e(__vdso_clock_getres+94)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xdd1b2(clock_nanosleep+82)
clock_nanosleep(any u32, 0, any, any) @ libc.so.6+0xdd23d(clock_nanosleep+221)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd288(clock_nanosleep+296)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd2f9(clock_nanosleep+409)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd31f(clock_nanosleep+447)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xdd372(clock_nanosleep+530)
exit_group(NULL-0x1fe) @ ld-linux-x86-64.so.2+0x1f2bc(_exit*+44)
exit_group(any u32) @ libc.so.6+0xe3144(_Exit+52)
epoll_wait(any u32, any, any u32, -1 as u32) @ libc.so.6+0x11f428(epoll_wait+24)
epoll_wait(any u32, any, any u32, any u32) @ libc.so.6+0x11f46c(epoll_wait+92)
epoll_ctl(any u32, any u32, any u32, any) @ libc.so.6+0x11fafc(epoll_ctl+12)
tgkill(any u32, any u32, SIGCANCEL) @ libpthread.so.0+0x738d(create_thread+269)
tgkill(any, any u32, SIGABRT) @ libc.so.6+0x42fe7(raise+167)
tgkill(any, any u32, SIGFPE) @ libc.so.6+0x42fe7(raise+167)
add_key(libkrb5.so.3+0x875c4, any, 0, 0, any u32) @ libc.so.6+0x11873b(syscall+27)
add_key(libkrb5.so.3+0x875f3, any, any, any, any u32) @ libc.so.6+0x11873b(syscall+27)
add_key(libkrb5.so.3+0x87624, any, any, any, any u32) @ libc.so.6+0x11873b(syscall+27)
keyctl(0, any, any, any, any) @ libc.so.6+0x11873b(syscall+27)
keyctl(0x6-0xb, any, any, any, any) @ libc.so.6+0x11873b(syscall+27)
keyctl(15, any, any, any, any) @ libc.so.6+0x11873b(syscall+27)
keyctl(22, any, any, any, any) @ libc.so.6+0x11873b(syscall+27)
openat(AT_FDCWD, any, any u32, any) @ libpthread.so.0+0x13ab9(__open+89)
openat(AT_FDCWD, any, any u32, any) @ libpthread.so.0+0x13b32(__open+210)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x10dd39(open+89)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x10ddb2(open+210)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x1134fa(__open_nocancel+74)
openat(any u32, libc.so.6+0x1b5e38, O_RDONLY|O_CLOEXEC, any) @ libc.so.6+0x113598(__openat64_nocancel*+56)
newfstatat(any u32, any, any, AT_SYMLINK_NOFOLLOW) @ libc.so.6+0x10d9bd(__fxstatat+29)
set_robust_list(any, 24) @ libpthread.so.0+0x8598(start_thread+104)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x113d72(getrlimit+18)
sendmmsg(any u32, any, 2, MSG_NOSIGNAL) @ libc.so.6+0x120c48(sendmmsg+24)
sendmmsg(any u32, any, any u32, any u32) @ libc.so.6+0x120c8c(sendmmsg+92)
getrandom(any, any, 0) @ libc.so.6+0x482e0(getentropy+48)
getrandom(any, non-NULL, 0) @ libc.so.6+0x11873b(syscall+27)
