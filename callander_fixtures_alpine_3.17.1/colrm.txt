callander: permitted syscalls: read(any, any, any) @ ld-musl-x86_64.so.1+0x4a70f(__stdio_read*+77)
open(ld-musl-x86_64.so.1+0x94b63, 0x8002, any) @ ld-musl-x86_64.so.1+0x1c981(__init_libc*+357)
open(any, 0x88800, any) @ ld-musl-x86_64.so.1+0x583df(__map_file*+24)
close(any) @ ld-musl-x86_64.so.1+0x4a627(__stdio_close*+17)
close(any) @ ld-musl-x86_64.so.1+0x55597(__syscall_cp_c*+57)
close(any) @ ld-musl-x86_64.so.1+0x583bf
close(any) @ ld-musl-x86_64.so.1+0x58415(__map_file*+78)
close(any) @ ld-musl-x86_64.so.1+0x5844b(__map_file*+132)
fstat(any, any) @ ld-musl-x86_64.so.1+0x583fe(__map_file*+55)
poll(any, 3, 6) @ ld-musl-x86_64.so.1+0x1c95e(__init_libc*+322)
lseek(any, any, any) @ ld-musl-x86_64.so.1+0x5b428(lseek64+11)
mmap(0, any, 0, 34, 0xffffffffffffffff, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, 1, 1, any, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(0, any, 3, 34, 0xffffffffffffffff, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mmap(any, 0x1000, 0, 50, 0xffffffffffffffff, any) @ ld-musl-x86_64.so.1+0x390f3(mmap+118)
mprotect(NULL-0xfffffffffffff000, any, 3) @ ld-musl-x86_64.so.1+0x39165(mprotect+37)
munmap(any, any) @ ld-musl-x86_64.so.1+0x3926b(munmap+25)
munmap(any, any) @ ld-musl-x86_64.so.1+0x58353
brk(0) @ ld-musl-x86_64.so.1+0x26e0a(__malloc_alloc_meta*+234)
brk(any) @ ld-musl-x86_64.so.1+0x26e2f(__malloc_alloc_meta*+271)
brk(any) @ ld-musl-x86_64.so.1+0x26e59(__malloc_alloc_meta*+313)
rt_sigaction(33, any, 0, 8) @ ld-musl-x86_64.so.1+0x494ce(__libc_sigaction*+282)
rt_sigprocmask(0, ld-musl-x86_64.so.1+0x937b8(all_mask*), any, 8) @ ld-musl-x86_64.so.1+0x491f9(__block_all_sigs*+23)
rt_sigprocmask(0, ld-musl-x86_64.so.1+0x937b0(app_mask*), any, 8) @ ld-musl-x86_64.so.1+0x49213(__block_app_sigs*+23)
rt_sigprocmask(2, any, 0, 8) @ ld-musl-x86_64.so.1+0x4922b(__restore_sigs*+21)
rt_sigprocmask(1, any, 0, 8) @ ld-musl-x86_64.so.1+0x4944f(__libc_sigaction*+155)
rt_sigprocmask(0, any, any, 8) @ ld-musl-x86_64.so.1+0x578d1(pthread_sigmask+29)
rt_sigprocmask(2, any, 0, 8) @ ld-musl-x86_64.so.1+0x578d1(pthread_sigmask+29)
rt_sigreturn(any) @ ld-musl-x86_64.so.1+0x49ad4(__restore_rt*+7)
ioctl(any, 0x5413, any) @ ld-musl-x86_64.so.1+0x4a886(__stdout_write*+48)
readv(any, any, 2) @ ld-musl-x86_64.so.1+0x4a70f(__stdio_read*+77)
writev(any, any, any) @ ld-musl-x86_64.so.1+0x4a7d7(__stdio_write*+81)
madvise(NULL-0xfffffffffffffffe, any, 8) @ ld-musl-x86_64.so.1+0x39038(madvise+9)
dup(any) @ ld-musl-x86_64.so.1+0x5ae16(dup+9)
exit(0) @ ld-musl-x86_64.so.1+0x56017(pthread_exit+483)
exit(0) @ ld-musl-x86_64.so.1+0x5835d
gettimeofday(any, 0) @ ld-musl-x86_64.so.1+0x5963b(clock_gettime+80)
tkill(any, 33) @ ld-musl-x86_64.so.1+0x56b6b(pthread_kill+65)
futex(any, NULL-0x87, any, any, any, any)
futex(any, any u32, 1, any, 202, any)
futex(any, any, any, any, 0, any)
futex(ld-musl-x86_64.so.1+0x97460(maplock*), any u32, any, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x98ba0(key_lock*), any u32, any, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99900(lock*), any u32, any, any, 202, any u32)
futex(ld-musl-x86_64.so.1+0x99ee0(vmlock*), any, any, 0, ld-musl-x86_64.so.1+0x99ee4(vmlock*+4), 0x1-0xffffffff)
futex(ld-musl-x86_64.so.1+0x99fb0(__thread_list_lock*), any, any, 0, ld-musl-x86_64.so.1+0x9a038(tl_lock_waiters*), 0x1-0xffffffff)
restart_syscall()
clock_gettime(any, any)
exit_group(any) @ ld-musl-x86_64.so.1+0x1cea9(_Exit+8)
set_robust_list(0, 24) @ ld-musl-x86_64.so.1+0x55fc1(pthread_exit+397)
set_robust_list(any, 24) @ ld-musl-x86_64.so.1+0x56ee1(__pthread_mutex_trylock_owner*+182)
