callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x1149d0(__read+16)
read(any u32, any, any) @ libc.so.6+0x114a0a(__read+74)
read(any u32, any, any) @ libc.so.6+0x119d16(__read_nocancel+6)
read(any, any, 1) @ libc.so.6+0x119d16(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x114a75(__write+21)
write(any u32, any, any) @ libc.so.6+0x114aad(__write+77)
write(any u32, any, any) @ libc.so.6+0x119d89(__write_nocancel+9)
close(any u32) @ libc.so.6+0x115155(__close+21)
close(any u32) @ libc.so.6+0x115179(__close+57)
close(any u32) @ libc.so.6+0x119a59(__close_nocancel+9)
poll(any, 1, any u32) @ libc.so.6+0x118d85(poll+21)
poll(any, any, any u32) @ libc.so.6+0x118dbd(poll+77)
lseek(any u32, any, any) @ libc.so.6+0x114b09(__lseek+9)
mmap(0, any, PROT_READ|PROT_WRITE, any u32, -1 as u32, 0) @ libc.so.6+0x11ec15(mmap+21)
mmap(NULL-0xfffffffffffffffe, any, 0x0-0x1, any u32, any u32, 0) @ libc.so.6+0x11ec15(mmap+21)
mmap(any, any, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE, -1 as u32, 0) @ libc.so.6+0x11ec15(mmap+21)
mmap(non-NULL, any, PROT_NONE, any u32, -1 as u32, 0) @ libc.so.6+0x11ec15(mmap+21)
mprotect(any, any, PROT_READ|PROT_WRITE) @ libc.so.6+0x11ec99(__mprotect+9)
munmap(any, any) @ libc.so.6+0x11ec69(__munmap+9)
brk(any) @ libc.so.6+0x11aa19(brk+9)
rt_sigaction(any u32, any, any, 8) @ libc.so.6+0x425f1(__libc_sigaction+193)
rt_sigprocmask(SIG_BLOCK, libc.so.6+0x1d2a60(sigall_set*), any, 8) @ libc.so.6+0x96933(pthread_kill+99)
rt_sigprocmask(SIG_SETMASK, any, 0, 8) @ libc.so.6+0x96980(pthread_kill+176)
rt_sigprocmask(0x0-0x2, any, any, 8) @ libc.so.6+0x9bc19(pthread_sigmask+73)
rt_sigreturn(any) @ libc.so.6+0x42527
ioctl(any u32, TCGETS, any) @ libc.so.6+0x11a138(tcgetattr+40)
ioctl(any u32, any u32, any) @ libc.so.6+0x11ab3d(ioctl+61)
pread64(NULL-0xfffffffe, any, 511, any) @ libc.so.6+0x119d4c(__pread64_nocancel+12)
pread64(any u32, any, 384, any) @ libc.so.6+0x119d4c(__pread64_nocancel+12)
readv(any u32, any, any u32) @ libc.so.6+0x11aba5(readv+21)
readv(any u32, any, any u32) @ libc.so.6+0x11abdb(readv+75)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0xf5c2(_dl_debug_vdprintf*+258)
writev(2, NULL-0xfffffffffffffff0, 1) @ libc.so.6+0x89368(__libc_message.constprop.0*+232)
writev(2, NULL-0xfffffffffffffff0, any) @ libc.so.6+0x895db(__libc_message*+507)
access(any, any u32) @ libc.so.6+0x114b39(access+9)
sched_yield() @ libc.so.6+0x108c99(sched_yield+9)
mremap(any, any, any, MREMAP_MAYMOVE, any) @ libc.so.6+0x126b5d(mremap+45)
madvise(NULL-0xfffffffffffffffe, any, MADV_DONTNEED) @ libc.so.6+0x11ed69(madvise+9)
madvise(any, any, MADV_HUGEPAGE) @ libc.so.6+0x11ed69(madvise+9)
shmget(any u32, any, any u32) @ libc.so.6+0x12863c(shmget+12)
shmat(any u32, 0, 0) @ libc.so.6+0x1285d9(shmat+9)
shmat(any u32, 0, SHM_NORESERVE) @ libc.so.6+0x1285d9(shmat+9)
shmctl(any u32, any u32, any) @ libc.so.6+0x12868f(shmctl+31)
dup(any u32) @ libc.so.6+0x1151d9(dup+9)
dup2(any u32, any u32) @ libc.so.6+0x115209(__dup2+9)
pause() @ libc.so.6+0xea5f5(pause+21)
pause() @ libc.so.6+0xea610(pause+48)
alarm(any u32) @ libc.so.6+0xea549(alarm+9)
getpid() @ ld-linux-x86-64.so.2+0x26ee9(__GI___getpid*+9)
getpid() @ libc.so.6+0xec049(__getpid+9)
socket(any u32, any u32, any u32) @ libc.so.6+0x127d29(socket+9)
connect(any u32, any, any u32) @ libc.so.6+0x1276e5(connect+21)
connect(any u32, any, any u32) @ libc.so.6+0x127719(connect+73)
accept(any u32, any, any) @ libc.so.6+0x127615(accept+21)
accept(any u32, any, any) @ libc.so.6+0x12764d(accept+77)
sendto(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x127a9e(__send+30)
sendto(any u32, any, any, any u32, 0, 0) @ libc.so.6+0x127aec(__send+108)
sendto(any u32, any, any, any u32, any, any) @ libc.so.6+0x127bf8(sendto+24)
sendto(any u32, any, any, any u32, any, any u32) @ libc.so.6+0x127c54(sendto+116)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x127918(recvfrom+24)
recvfrom(any u32, any, any, any u32, any, any) @ libc.so.6+0x127972(recvfrom+114)
recvmsg(any u32, any, MSG_CMSG_CLOEXEC) @ libc.so.6+0x1279eb(recvmsg+27)
recvmsg(any u32, any, any u32) @ libc.so.6+0x127a2d(recvmsg+93)
shutdown(any u32, any u32) @ libc.so.6+0x127cf9(shutdown+9)
bind(any u32, any, any u32) @ libc.so.6+0x1276a9(bind+9)
listen(any u32, any u32) @ libc.so.6+0x127819(listen+9)
getsockname(any u32, any, any) @ libc.so.6+0x1277a9(getsockname+9)
getpeername(any u32, any, any) @ libc.so.6+0x127779(getpeername+9)
socketpair(any u32, any u32, any u32, any) @ libc.so.6+0x127d5c(socketpair+12)
setsockopt(any u32, any u32, any u32, any, any u32) @ libc.so.6+0x127cbc(setsockopt+12)
getsockopt(any u32, any u32, any u32, any, any) @ libc.so.6+0x1277dc(getsockopt+12)
clone(SIGCHLD|CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID, 0, 0, any, 0) @ libc.so.6+0xeab55(_Fork+37)
exit(0) @ libc.so.6+0x29db4(__libc_start_call_main*+164)
wait4(any u32, any, any u32, 0) @ libc.so.6+0xea3e8(wait4+24)
wait4(any u32, any, any u32, any) @ libc.so.6+0xea42d(wait4+93)
kill(any u32, any u32) @ libc.so.6+0x42759(kill+9)
uname(any) @ libc.so.6+0xea309(uname+9)
semget(any u32, any u32, any u32) @ libc.so.6+0x1284a9(semget+9)
semctl(any u32, any u32, NULL-0x14, any) @ libc.so.6+0x12855d(semctl+141)
shmdt(NULL-0xfffffffffffffffe) @ libc.so.6+0x128609(shmdt+9)
msgget(any u32, any u32) @ libc.so.6+0x128409(msgget+9)
msgsnd(any u32, any, any, any u32) @ libc.so.6+0x1282a8(msgsnd+24)
msgsnd(any u32, any, any, any u32) @ libc.so.6+0x1282ee(msgsnd+94)
msgrcv(any u32, any, any, any, any u32) @ libc.so.6+0x128358(__libc_msgrcv+24)
msgrcv(any u32, any, any, any, any u32) @ libc.so.6+0x1283a9(__libc_msgrcv+105)
msgctl(any u32, any u32, any) @ libc.so.6+0x128449(msgctl+25)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x114f59(__libc_fcntl64+121)
fcntl(any u32, F_OFD_SETLKW, any) @ libc.so.6+0x114f59(__libc_fcntl64+121)
fcntl(any u32, any u32, any) @ libc.so.6+0x114fa5(__libc_fcntl64+197)
fcntl(any u32, F_SETFD, 1) @ libc.so.6+0x119ac3(__fcntl64_nocancel*+67)
fcntl(any u32, F_GETFL, any) @ libc.so.6+0x119ac3(__fcntl64_nocancel*+67)
fcntl(any u32, F_SETLKW, any) @ libc.so.6+0x119ac3(__fcntl64_nocancel*+67)
fcntl(any u32, any u32, any) @ libc.so.6+0x119b52(__fcntl64_nocancel_adjusted*+34)
fcntl(any u32, F_GETOWN_EX, any) @ libc.so.6+0x119b85(__fcntl64_nocancel_adjusted*+85)
flock(any u32, any u32) @ libc.so.6+0x114fe9(flock+9)
truncate(any, any) @ libc.so.6+0x11d179(truncate+9)
ftruncate(any u32, any) @ libc.so.6+0x11d1a9(ftruncate+9)
getcwd(non-NULL, any) @ libc.so.6+0x115453(getcwd+147)
chdir(any) @ libc.so.6+0x115369(chdir+9)
fchdir(any u32) @ libc.so.6+0x115399(fchdir+9)
rename(any, any) @ libc.so.6+0x61ea9(rename+9)
mkdir(any, any u32) @ libc.so.6+0x114649(mkdir+9)
rmdir(any) @ libc.so.6+0x1162f9(rmdir+9)
link(any, any) @ libc.so.6+0x116179(link+9)
unlink(any) @ libc.so.6+0x116299(unlink+9)
symlink(any, any) @ libc.so.6+0x1161d9(symlink+9)
readlink(any, any, 4095) @ libc.so.6+0x116239(readlink+9)
readlink(any, non-NULL, 511) @ libc.so.6+0x116239(readlink+9)
chmod(any, any u32) @ libc.so.6+0x114449(chmod+9)
fchmod(any u32, any u32) @ libc.so.6+0x114479(fchmod+9)
chown(any, any u32, any u32) @ libc.so.6+0x115c59(chown+9)
fchown(any u32, any u32, any u32) @ libc.so.6+0x115c89(fchown+9)
umask(any) @ libc.so.6+0x114439(umask+9)
gettimeofday(any, any) @ libc.so.6+0xd9a8e(__gettimeofday_syscall*+14)
gettimeofday(any, any) @ [vdso]+0x7ff(gettimeofday+271)
sysinfo(any) @ libc.so.6+0x126fd9(sysinfo+9)
times(any) @ libc.so.6+0xea339(times+9)
getuid() @ libc.so.6+0xec069(getuid+9)
getgid() @ libc.so.6+0xec089(getgid+9)
geteuid() @ libc.so.6+0xec079(geteuid+9)
getegid() @ libc.so.6+0xec099(getegid+9)
setpgid(any u32, any u32) @ libc.so.6+0xec309(setpgid+9)
getppid() @ libc.so.6+0xec059(getppid+9)
setreuid(any u32, -1 as u32) @ libc.so.6+0x91cb3(__nptl_setxid*+771)
setreuid(any u32, -1 as u32) @ libc.so.6+0x11b137(setreuid+39)
setregid(any u32, -1 as u32) @ libc.so.6+0x91cb3(__nptl_setxid*+771)
setregid(any u32, -1 as u32) @ libc.so.6+0x11b1c7(setregid+39)
getgroups(any u32, any) @ libc.so.6+0xec0a9(getgroups+9)
setgroups(any, any) @ libc.so.6+0x91cb3(__nptl_setxid*+771)
setgroups(any, any) @ libc.so.6+0xe76c7(setgroups+39)
setresuid(any u32, any u32, -1 as u32) @ libc.so.6+0x91cb3(__nptl_setxid*+771)
setresuid(any u32, any u32, -1 as u32) @ libc.so.6+0xec447(setresuid+39)
setresuid(-1 as u32, NULL-0xfffffffe, -1 as u32) @ libc.so.6+0x11b26e(seteuid+62)
setresgid(any u32, any u32, -1 as u32) @ libc.so.6+0x91cb3(__nptl_setxid*+771)
setresgid(any u32, any u32, -1 as u32) @ libc.so.6+0xec4e7(setresgid+39)
setresgid(-1 as u32, NULL-0xfffffffe, -1 as u32) @ libc.so.6+0x11b32e(setegid+62)
getpgid(any) @ libc.so.6+0xec2d9(getpgid+9)
sigaltstack(0, any) @ libc.so.6+0x13661d(____longjmp_chk*+77)
getpriority(any u32, any u32) @ libc.so.6+0x11a939(getpriority+9)
setpriority(any u32, any u32, any u32) @ libc.so.6+0x11a979(setpriority+9)
sched_getparam(any u32, any) @ libc.so.6+0x108c09(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x108c39(__sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0x108c69(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x108cc9(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x108cf9(__sched_get_priority_min+9)
prctl(PR_SET_NAME, any, 0, 0, 0) @ libc.so.6+0x12656f(prctl+79)
chroot(any) @ libc.so.6+0x11ba39(chroot+9)
gettid() @ libc.so.6+0x969e5(pthread_kill+277)
time(any) @ libc.so.6+0xd9979(time_syscall*+9)
futex(any, any u8, any u32, 0, any, any)
futex(any, any u32, 0, any, 0, -1 as u32)
futex(any, any u32, any u32, 0, 0, -1 as u32)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x121c56(__get_nprocs_sched*+54)
getdents64(any u32, any, any) @ libc.so.6+0xe6645(getdents64+21)
restart_syscall()
semtimedop(any u32, any, any, 0) @ libc.so.6+0x12859c(semtimedop+12)
clock_gettime(0x0-0x1, any) @ libc.so.6+0xe5685(clock_gettime+53)
clock_gettime(CLOCK_REALTIME_COARSE, any) @ libc.so.6+0xe5685(clock_gettime+53)
clock_gettime(any u32, any) @ [vdso]+0x99a(__vdso_clock_gettime+202)
clock_getres(any u32, any) @ [vdso]+0xb9e(__vdso_clock_getres+94)
clock_nanosleep(CLOCK_REALTIME, 0, any, any) @ libc.so.6+0xe5788(clock_nanosleep+88)
clock_nanosleep(any u32, 0, any, any) @ libc.so.6+0xe57f6(clock_nanosleep+198)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xe584d(clock_nanosleep+285)
clock_nanosleep(CLOCK_MONOTONIC, 0, any, any) @ libc.so.6+0xe58e1(clock_nanosleep+433)
exit_group(NULL-0x800) @ ld-linux-x86-64.so.2+0x26eaf(_exit*+31)
exit_group(any u32) @ libc.so.6+0xeac2f(_exit+47)
tgkill(any u32, any u32, SIGSETXID) @ libc.so.6+0x91ad2(__nptl_setxid*+290)
tgkill(any u32, any u32, SIGSETXID) @ libc.so.6+0x91b32(__nptl_setxid*+386)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x969c9(pthread_kill+249)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x969c9(pthread_kill+249)
tgkill(any u32, any u32, SIGABRT) @ libc.so.6+0x969fa(pthread_kill+298)
tgkill(any u32, any u32, SIGFPE) @ libc.so.6+0x969fa(pthread_kill+298)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x114729(__open+89)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x1147a2(__open+210)
openat(any u32, libc.so.6+0x1da071, O_RDONLY, any) @ libc.so.6+0x1148a4(openat+68)
openat(any u32, any, any u32, any) @ libc.so.6+0x114931(openat+209)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x119c0a(__open_nocancel+74)
newfstatat(any u32, any, any, 256) @ libc.so.6+0x113f2c(fstatat64+12)
newfstatat(any u32, libc.so.6+0x1d846f, any, 0x1000) @ libc.so.6+0x113f2c(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x113f2c(fstatat64+12)
unlinkat(any u32, any, 0) @ libc.so.6+0x1162c9(unlinkat+9)
renameat(any u32, any, any u32, any) @ libc.so.6+0x61edc(renameat+12)
linkat(any u32, any, any u32, any, 0) @ libc.so.6+0x1161ac(linkat+12)
pselect6(any u32, any, any, any, any, 0) @ libc.so.6+0x11b78b(select+187)
pselect6(any u32, any, any, any, any, 0) @ libc.so.6+0x11b82b(select+347)
set_robust_list(any, any) @ NULL
set_robust_list(any, 24) @ libc.so.6+0xeab90(_Fork+96)
utimensat(any u32, any, any, 0) @ libc.so.6+0x11946c(__GI___utimensat64_helper*+12)
accept4(any u32, any, any, SOCK_CLOEXEC) @ libc.so.6+0x127ed8(accept4+24)
accept4(any u32, any, any, any u32) @ libc.so.6+0x127f1e(accept4+94)
dup3(any u32, any u32, 0x0-0x80000) @ libc.so.6+0x115239(dup3+9)
pipe2(any, 0) @ libc.so.6+0x11526b(__pipe+11)
pipe2(any, O_CLOEXEC) @ libc.so.6+0x1152a9(pipe2+9)
prlimit64(0, RLIMIT_NOFILE, 0, any) @ libc.so.6+0x11a4d2(getrlimit+18)
getrandom(any, 8, 1) @ libc.so.6+0x46c85(getrandom+21)
getrandom(any, any, any u32) @ libc.so.6+0x46cbd(getrandom+77)
