callander: permitted syscalls: read(any u32, any, any) @ libc.so.6+0x114990(__read+16)
read(any u32, any, any) @ libc.so.6+0x1149ca(__read+74)
read(any u32, any, any) @ libc.so.6+0x119cd6(__read_nocancel+6)
read(any, any, 1) @ libc.so.6+0x119cd6(__read_nocancel+6)
write(any u32, any, any) @ libc.so.6+0x114a35(__write+21)
write(any u32, any, any) @ libc.so.6+0x114a6d(__write+77)
write(any u32, any, any) @ libc.so.6+0x119d49(__write_nocancel+9)
close(any u32) @ libc.so.6+0x115115(__close+21)
close(any u32) @ libc.so.6+0x115139(__close+57)
close(any u32) @ libc.so.6+0x119a19(__close_nocancel+9)
lseek(any u32, any, any) @ libc.so.6+0x114ac9(__lseek+9)
mmap(0, any, 3, any u32, 0xffffffff, 0) @ libc.so.6+0x11ebd5(mmap+21)
mmap(NULL-0xfffffffffffffffe, any, NULL-0x1, any u32, any u32, 0) @ libc.so.6+0x11ebd5(mmap+21)
mmap(non-NULL, any, 0, any u32, 0xffffffff, 0) @ libc.so.6+0x11ebd5(mmap+21)
mprotect(any, any, 3) @ libc.so.6+0x11ec59(__mprotect+9)
munmap(any, any) @ libc.so.6+0x11ec29(__munmap+9)
brk(any) @ libc.so.6+0x11a9d9(brk+9)
rt_sigaction(2, any, any, 8) @ libc.so.6+0x425f1(__libc_sigaction+193)
rt_sigaction(6, any, any, 8) @ libc.so.6+0x425f1(__libc_sigaction+193)
rt_sigaction(15, any, any, 8) @ libc.so.6+0x425f1(__libc_sigaction+193)
rt_sigprocmask(0, libc.so.6+0x1d2a60(sigall_set*), any, 8) @ libc.so.6+0x969b3(pthread_kill+99)
rt_sigprocmask(2, any, 0, 8) @ libc.so.6+0x96a00(pthread_kill+176)
rt_sigprocmask(1, any, 0, 8) @ libc.so.6+0x9bc99(pthread_sigmask+73)
rt_sigreturn(any) @ libc.so.6+0x42527
ioctl(any u32, 0x5401, any) @ libc.so.6+0x11a0f8(tcgetattr+40)
pread64(NULL-0xfffffffe, any, 511, any) @ libc.so.6+0x119d0c(__pread64_nocancel+12)
writev(any u32, any, any) @ ld-linux-x86-64.so.2+0xf5c2(_dl_debug_vdprintf*+258)
writev(2, NULL-0xfffffffffffffff0, 1) @ libc.so.6+0x893e8(__libc_message.constprop.0*+232)
writev(2, NULL-0xfffffffffffffff0, any) @ libc.so.6+0x8965b(__libc_message*+507)
sched_yield() @ libc.so.6+0x108ca9(sched_yield+9)
mremap(any, any, any, 1, any) @ libc.so.6+0x126b1d(mremap+45)
madvise(NULL-0xfffffffffffffffe, any, 4) @ libc.so.6+0x11ed29(madvise+9)
madvise(any, any, 14) @ libc.so.6+0x11ed29(madvise+9)
dup(NULL-0xfffffffe) @ libc.so.6+0x115199(dup+9)
dup2(any u32, 0x1-0x2) @ libc.so.6+0x1151c9(__dup2+9)
getpid() @ ld-linux-x86-64.so.2+0x26f09(__GI___getpid*+9)
getpid() @ libc.so.6+0xec0b9(__getpid+9)
clone(0x1200011, 0, 0, any, 0) @ libc.so.6+0xeabc5(_Fork+37)
exit(0) @ libc.so.6+0x29db4(__libc_start_call_main*+164)
wait4(0x1-0xffffffff, any, 1, 0) @ libc.so.6+0xea458(wait4+24)
wait4(any u32, any, any u32, any) @ libc.so.6+0xea49d(wait4+93)
kill(any u32, any u32) @ libc.so.6+0x42759(kill+9)
fcntl(any u32, 2, 1) @ libc.so.6+0x119a83(__fcntl64_nocancel*+67)
fcntl(any u32, 3, any) @ libc.so.6+0x119a83(__fcntl64_nocancel*+67)
fcntl(NULL-0xfffffffe, 3, any) @ libc.so.6+0x119b12(__fcntl64_nocancel_adjusted*+34)
fcntl(NULL-0xfffffffe, 4, any u16) @ libc.so.6+0x119b12(__fcntl64_nocancel_adjusted*+34)
getcwd(non-NULL, any) @ libc.so.6+0x115413(getcwd+147)
mkdir(any, 448) @ libc.so.6+0x114609(mkdir+9)
gettimeofday(any, any) @ [vdso]+0x7da(gettimeofday+218)
sysinfo(any) @ libc.so.6+0x126f99(sysinfo+9)
setsid() @ libc.so.6+0xec409(setsid+9)
sched_getparam(any u32, any) @ libc.so.6+0x108c19(sched_getparam+9)
sched_setscheduler(any u32, any u32, any) @ libc.so.6+0x108c49(__sched_setscheduler+9)
sched_getscheduler(any u32) @ libc.so.6+0x108c79(sched_getscheduler+9)
sched_get_priority_max(1) @ libc.so.6+0x108cd9(sched_get_priority_max+9)
sched_get_priority_min(1) @ libc.so.6+0x108d09(__sched_get_priority_min+9)
gettid() @ libc.so.6+0x96a65(pthread_kill+277)
time(any) @ libc.so.6+0xd99e9(time_syscall*+9)
futex(any, any u8, 1, 0, any u32, any)
futex(any, any u8, 1, 0, any, any u32)
futex(any, any u8, 0x7fffffff, 0, any, any)
futex(any, any u32, any u32, 0, 0, 0xffffffff)
futex(any, 128, 2, 0, any, any)
futex(any, 129, 1, 0, any, any)
futex(libc.so.6+0x21aa6c(once*), 128, any u32, 0, 202, 2177)
futex(libc.so.6+0x227a80(once.0*), 128, any u32, 0, 202, 2177)
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), 0, 0x1-0xffffffff, 0, NULL-0x40000000, ld-linux-x86-64.so.2+0x3aa68(_rtld_global+2600))
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), NULL-0x80, NULL-0xfff80002, 0, NULL-0xfff80000, NULL-0xfff80001)
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), any u8, 0, 0, 0, any)
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), any u8, 0, 0, ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), any)
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), any u8, 1, 0, any, any)
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), any u8, 2, 0, NULL-0x80, any)
futex(ld-linux-x86-64.so.2+0x3aa48(_rtld_global+2568), 7, 0, 0, any, any)
sched_getaffinity(0, 0x1000, any) @ libc.so.6+0x121c16(__get_nprocs_sched*+54)
getdents64(any u32, any, any) @ libc.so.6+0xe66b5(getdents64+21)
restart_syscall()
clock_gettime(NULL-0x1, any) @ libc.so.6+0xe56f5(clock_gettime+53)
clock_gettime(any u32, any) @ [vdso]+0x9af(__vdso_clock_gettime+207)
clock_getres(any u32, any) @ [vdso]+0xbaa(__vdso_clock_getres+90)
clock_nanosleep(0, 0, any, any) @ libc.so.6+0xe57f8(clock_nanosleep+88)
clock_nanosleep(any u32, 0, any, any) @ libc.so.6+0xe5866(clock_nanosleep+198)
clock_nanosleep(1, 0, any, any) @ libc.so.6+0xe58bd(clock_nanosleep+285)
clock_nanosleep(1, 0, any, any) @ libc.so.6+0xe5951(clock_nanosleep+433)
exit_group(NULL-0x800) @ ld-linux-x86-64.so.2+0x26ecf(_exit*+31)
exit_group(any u32) @ libc.so.6+0xeac9f(_exit+47)
tgkill(any u32, any u32, 6) @ libc.so.6+0x96a49(pthread_kill+249)
tgkill(any u32, any u32, 8) @ libc.so.6+0x96a49(pthread_kill+249)
tgkill(any u32, any u32, 6) @ libc.so.6+0x96a7a(pthread_kill+298)
tgkill(any u32, any u32, 8) @ libc.so.6+0x96a7a(pthread_kill+298)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x1146e9(__open+89)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x114762(__open+210)
openat(any u32, libc.so.6+0x1da071, 0, any) @ libc.so.6+0x114864(openat+68)
openat(any u32, any, any u32, any) @ libc.so.6+0x1148f1(openat+209)
openat(AT_FDCWD, any, any u32, any) @ libc.so.6+0x119bca(__open_nocancel+74)
newfstatat(any u32, libc.so.6+0x1d846f, any, 0x1000) @ libc.so.6+0x113eec(fstatat64+12)
newfstatat(any u32, any, any, 256) @ libc.so.6+0x113eec(fstatat64+12)
newfstatat(AT_FDCWD, any, any, 0) @ libc.so.6+0x113eec(fstatat64+12)
set_robust_list(any, 24) @ libc.so.6+0xeac00(_Fork+96)
pipe2(any, 0) @ libc.so.6+0x11522b(__pipe+11)
getrandom(libc.so.6+0x2204d8(tcache_key*), 8, 1) @ libc.so.6+0x46c85(getrandom+21)
getrandom(any, any, any u32) @ libc.so.6+0x46cbd(getrandom+77)
